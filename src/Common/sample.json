{
  "total": 9018,
  "items": [
    {
      "title": "What is the difference between MVC and MVVM?",
      "body": "<p>Is there a difference between the standard \"Model View Controller\" pattern and Microsoft's Model/View/ViewModel pattern?</p>\n",
      "up_vote_count": 1001,
      "answer_count": 20,
      "view_count": 430165,
      "creation_date": 1237579758,
      "owner": {
        "display_name": "Bjorn Reppen",
        "profile_image": "https://i.stack.imgur.com/8WBMQ.png?s=128&g=1",
        "reputation": 8988,
        "badge_counts": {
          "gold": 5,
          "silver": 32,
          "bronze": 62,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "model-view-controller",
        "design-patterns",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM: Tutorial from start to finish?",
      "body": "<p>I'm a C#/Windows Forms programmer with more than 5 years experience. I've been investigating WPF using the MVVM (Model-View-ViewModel) design pattern. I have searched the Internet for tutorials. I have even watched the entirety of Jason Dolinger's awesome video. Although I have found many, I have not found one that takes me from start to finish. What I really want is a tutorial that doesn't assume any previous WPF knowledge.</p>\n\n<p>What are your favorite WPF-MVVM tutorials that helped you to learn?</p>\n",
      "up_vote_count": 245,
      "answer_count": 22,
      "view_count": 356753,
      "creation_date": 1252594141,
      "owner": {
        "display_name": "JP Richardson",
        "profile_image": "https://www.gravatar.com/avatar/0f56a5e429de009a27b0ae8f796ef2df?s=128&d=identicon&r=PG",
        "reputation": 20038,
        "badge_counts": {
          "gold": 30,
          "silver": 107,
          "bronze": 144,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "What framework for MVVM should I use?",
      "body": "<p>I am developing an application with the MVVM model, but I have reached a point where I need to choose which framework to use.</p>\n\n<p>Among the possible options are:</p>\n\n<ul>\n<li>MVVM Toolkit </li>\n<li>MVVM Foundation </li>\n<li>WPF Application Framework (WAF) </li>\n<li>Light MVVM </li>\n<li>Caliburn </li>\n<li>Cinch </li>\n<li>Prism</li>\n</ul>\n\n<p>In your experience, which is better?</p>\n",
      "up_vote_count": 228,
      "answer_count": 13,
      "view_count": 61282,
      "creation_date": 1252655598,
      "owner": {
        "display_name": "Rangel",
        "profile_image": "https://www.gravatar.com/avatar/33855d8e08c329ea0aae99b44f2386c4?s=128&d=identicon&r=PG",
        "reputation": 1260,
        "badge_counts": {
          "gold": 4,
          "silver": 10,
          "bronze": 11,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "frameworks"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Handling Dialogs in WPF with MVVM",
      "body": "<p>In the MVVM pattern for WPF, handling dialogs is one of the more complex operations.  As your view model does not know anything about the view, dialog communication can be interesting.  I can expose an ICommand that when the view invokes it, a dialog can appear.</p>\n\n<p>Does anyone know of a good way to handle results from dialogs? I am speaking about windows dialogs such as MessageBox.</p>\n\n<p>One of the ways we did this was have an event on the viewmodel that the view would subscribe to when a dialog was required.</p>\n\n\n\n<pre class=\"lang-cs prettyprint-override\"><code>public event EventHandler&lt;MyDeleteArgs&gt; RequiresDeleteDialog;\n</code></pre>\n\n<p>This is OK, but it means that the view requires code which is something I would like to stay away from.</p>\n",
      "up_vote_count": 217,
      "answer_count": 21,
      "view_count": 101780,
      "creation_date": 1232270591,
      "owner": {
        "display_name": "Ray Booysen",
        "profile_image": "https://i.stack.imgur.com/PwojJ.jpg?s=128&g=1",
        "reputation": 17092,
        "badge_counts": {
          "gold": 9,
          "silver": 63,
          "bronze": 96,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        ".net",
        "wpf",
        "design-patterns",
        "mvvm",
        "dialog"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "How to bind to a PasswordBox in MVVM",
      "body": "<p>I have come across a problem with binding to a PasswordBox. It seems it's a security risk but I am using the MVVM pattern so I wish to bypass this. I found some interesting code here (has anyone used this or something similar?)</p>\n\n<p><a href=\"http://www.wpftutorial.net/PasswordBox.html\" rel=\"noreferrer\">http://www.wpftutorial.net/PasswordBox.html</a></p>\n\n<p>It technically looks great, but I am unsure of how to retrieve the password. </p>\n\n<p>I basically have properties in my <code>LoginViewModel</code> for <code>Username</code> and <code>Password</code>. <code>Username</code> is fine and is working as it's a <code>TextBox</code>.</p>\n\n<p>I used the code above as stated and entered this</p>\n\n<pre><code>&lt;PasswordBox ff:PasswordHelper.Attach=\"True\"\n    ff:PasswordHelper.Password=\"{Binding Path=Password}\" Width=\"130\"/&gt;\n</code></pre>\n\n<p>When I had the <code>PasswordBox</code> as a <code>TextBox</code> and <code>Binding Path=Password</code> then the property in my <code>LoginViewModel</code> was updated.</p>\n\n<p>My code is very simple, basically I have a <code>Command</code> for my <code>Button</code>. When I press it <code>CanLogin</code> is called and if it returns true it calls <code>Login</code>.<br>\nYou can see I check my property for <code>Username</code> here which works great. </p>\n\n<p>In <code>Login</code> I send along to my service a <code>Username</code> and <code>Password</code>, <code>Username</code> contains data from my <code>View</code> but <code>Password</code> is <code>Null|Empty</code></p>\n\n<pre><code>private DelegateCommand loginCommand;\n\n    public string Username { get; set; }\n    public string Password { get; set; }\n\n\n    public ICommand LoginCommand\n    {\n        get\n        {\n            if (loginCommand == null)\n            {\n                loginCommand = new DelegateCommand(\n                    Login, CanLogin );\n            }\n            return loginCommand;\n        }\n    }\n\n    private bool CanLogin()\n    {\n        return !string.IsNullOrEmpty(Username);\n    }\n\n    private void Login()\n    {\n        bool result = securityService.IsValidLogin(Username, Password);\n\n        if (result) { }\n        else { }\n    }\n</code></pre>\n\n<hr>\n\n<p>This is what I am doing</p>\n\n<pre><code>&lt;TextBox Text=\"{Binding Path=Username, UpdateSourceTrigger=PropertyChanged}\"\n         MinWidth=\"180\" /&gt;\n\n&lt;PasswordBox ff:PasswordHelper.Attach=\"True\" \n             ff:PasswordHelper.Password=\"{Binding Path=Password}\" Width=\"130\"/&gt;\n</code></pre>\n\n<p>I have my <code>TextBox</code>, this is no problem, but in my <code>ViewModel</code> the <code>Password</code> is empty.</p>\n\n<p>Am I doing something wrong or missing a step?</p>\n\n<p>I put a breakpoint and sure enough the code enter the static helper class but it never updates my <code>Password</code> in my <code>ViewModel</code>.</p>\n",
      "up_vote_count": 192,
      "answer_count": 27,
      "view_count": 139645,
      "creation_date": 1254069265,
      "owner": {
        "display_name": "mark smith",
        "profile_image": "https://www.gravatar.com/avatar/990752653c19c5093055304680900a57?s=128&d=identicon&r=PG",
        "reputation": 8258,
        "badge_counts": {
          "gold": 40,
          "silver": 119,
          "bronze": 180,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm",
        "wpf-controls",
        "passwords"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "UI Design Pattern for Windows Forms (like MVVM for WPF)",
      "body": "<p>MVVM is most commonly used with WPF because it is perfectly suited for it. But what about Windows Forms? Is there an established and commonly used approach / design pattern like this for Windows Forms too? One that works explicitly well with Windows Forms? Is there a book or an article that describes this well? Maybe MVP or MVC based?</p>\n",
      "up_vote_count": 135,
      "answer_count": 11,
      "view_count": 75105,
      "creation_date": 1235751969,
      "owner": {
        "display_name": "bitbonk",
        "profile_image": "https://www.gravatar.com/avatar/db3dbf59a3772da9555829eefe237751?s=128&d=identicon&r=PG",
        "reputation": 21761,
        "badge_counts": {
          "gold": 23,
          "silver": 140,
          "bronze": 230,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "winforms",
        "design-patterns"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "In MVVM should the ViewModel or Model implement INotifyPropertyChanged?",
      "body": "<p>Most MVVM examples I have worked through have had the <em>Model</em> implement  INotifyPropertyChanged, but in <a href=\"http://www.codeproject.com/KB/WPF/VMCommanding.aspx\" rel=\"noreferrer\">Josh Smith's CommandSink example</a> <strong>the ViewModel implements INotifyPropertyChanged</strong>.</p>\n\n<p>I'm still cognitively putting together the MVVM concepts, so I don't know if:</p>\n\n<ul>\n<li>you have to put the INotifyPropertyChanged in the ViewModel to get CommandSink to work</li>\n<li>this is just an aberration of the norm and it doesn't really matter</li>\n<li>you should always have the Model implement INotifyPropertyChanged and this is just a mistake which would be corrected if this were developed from a code example to an application</li>\n</ul>\n\n<p>What have been others' experiences on MVVM projects you have worked on?</p>\n",
      "up_vote_count": 131,
      "answer_count": 15,
      "view_count": 37002,
      "creation_date": 1240315020,
      "owner": {
        "display_name": "Edward Tanguay",
        "profile_image": "https://www.gravatar.com/avatar/a9eaafb332f36840447f60dd85b94d19?s=128&d=identicon&r=PG",
        "reputation": 72716,
        "badge_counts": {
          "gold": 256,
          "silver": 619,
          "bronze": 943,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Good examples of MVVM Template",
      "body": "<p>I am currently working with the Microsoft MVVM template and find the lack of detailed examples frustrating.  The included ContactBook example shows very little Command handling and the only other example I've found is from an MSDN Magazine article where the concepts are similar but uses a slightly different approach and still lack in any complexity.  Are there any decent MVVM examples that at least show basic CRUD operations and dialog/content switching?</p>\n\n<hr>\n\n<p>Everyone's suggestions were really useful and I will start compiling a list of good resources</p>\n\n<p><strong>Frameworks/Templates</strong></p>\n\n<ul>\n<li><a href=\"http://wpf.codeplex.com/wikipage?title=WPF%20Model-View-ViewModel%20Toolkit&amp;referringTitle=Home\" rel=\"noreferrer\">WPF Model-View-ViewModel Toolkit</a></li>\n<li><a href=\"http://mvvmlight.codeplex.com/\" rel=\"noreferrer\">MVVM Light Toolkit</a></li>\n<li><a href=\"http://www.codeplex.com/CompositeWPF\" rel=\"noreferrer\">Prism</a></li>\n<li><a href=\"http://www.codeplex.com/caliburn\" rel=\"noreferrer\">Caliburn</a></li>\n<li><a href=\"http://cinch.codeplex.com/\" rel=\"noreferrer\">Cinch</a></li>\n</ul>\n\n<p><strong>Useful Articles</strong></p>\n\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/magazine/dd419663.aspx\" rel=\"noreferrer\">WPF Apps With The Model-View-ViewModel Design Pattern</a></li>\n<li><a href=\"http://blogs.msdn.com/wpfsdk/archive/2007/10/02/data-validation-in-3-5.aspx\" rel=\"noreferrer\">Data Validation in .NET 3.5</a></li>\n<li><a href=\"http://joshsmithonwpf.wordpress.com/2008/11/14/using-a-viewmodel-to-provide-meaningful-validation-error-messages/\" rel=\"noreferrer\">Using a ViewModel to Provide Meaningful Validation Error Messages</a></li>\n<li><a href=\"http://peteohanlon.wordpress.com/2009/01/22/action-based-viewmodel-and-model-validation/\" rel=\"noreferrer\">Action based ViewModel and Model validation</a></li>\n<li><a href=\"https://stackoverflow.com/questions/1667888/wpf-mvvm-dialog-example\">Dialogs</a></li>\n<li><a href=\"http://codingcontext.wordpress.com/2008/12/10/commandbindings-in-mvvm/\" rel=\"noreferrer\">Command Bindings in MVVM</a></li>\n<li><a href=\"http://marlongrech.wordpress.com/2008/03/20/more-than-just-mvc-for-wpf/\" rel=\"noreferrer\">More than just MVC for WPF</a></li>\n<li><a href=\"http://marlongrech.wordpress.com/2009/04/02/mvvm-mediator-acb-cool-wpf-app-intro/\" rel=\"noreferrer\">MVVM + Mediator Example\nApplication</a></li>\n</ul>\n\n<p><strong>Screencasts</strong></p>\n\n<ul>\n<li><a href=\"http://blog.lab49.com/archives/2650\" rel=\"noreferrer\">Jason Dolinger on Model-View-ViewModel</a></li>\n</ul>\n\n<p><strong>Additional Libraries</strong></p>\n\n<ul>\n<li><a href=\"http://marlongrech.wordpress.com/2009/04/16/mediator-v2-for-mvvm-wpf-and-silverlight-applications/\" rel=\"noreferrer\">WPF Disciples' improved Mediator Pattern implementation</a>(I highly recommend this for applications that have more complex navigation)</li>\n<li><a href=\"http://blog.galasoft.ch/archive/2009/09/27/mvvm-light-toolkit-messenger-v2-beta.aspx\" rel=\"noreferrer\">MVVM Light Toolkit Messenger</a></li>\n</ul>\n",
      "up_vote_count": 129,
      "answer_count": 9,
      "view_count": 53762,
      "creation_date": 1257179578,
      "owner": {
        "display_name": "jwarzech",
        "profile_image": "https://www.gravatar.com/avatar/a57ea1b86c75e051aa3eb21d5a094ec8?s=128&d=identicon&r=PG",
        "reputation": 3277,
        "badge_counts": {
          "gold": 10,
          "silver": 40,
          "bronze": 67,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Good or bad practice for Dialogs in wpf with MVVM?",
      "body": "<p>I lately had the problem of creating add and edit dialogs for my wpf app.</p>\n\n<p>All I want to do in my code was something like this. (I mostly use viewmodel first approach with mvvm)</p>\n\n<p>ViewModel which calls a dialog window:</p>\n\n<pre><code>var result = this.uiDialogService.ShowDialog(\"Dialogwindow Title\", dialogwindowVM);\n// Do anything with the dialog result\n</code></pre>\n\n<p>How does it work?</p>\n\n<p>First, I created a dialog service:</p>\n\n<pre><code>public interface IUIWindowDialogService\n{\n    bool? ShowDialog(string title, object datacontext);\n}\n\npublic class WpfUIWindowDialogService : IUIWindowDialogService\n{\n    public bool? ShowDialog(string title, object datacontext)\n    {\n        var win = new WindowDialog();\n        win.Title = title;\n        win.DataContext = datacontext;\n\n        return win.ShowDialog();\n    }\n}\n</code></pre>\n\n<p><code>WindowDialog</code> is a special but simple window.  I need it to hold my content:</p>\n\n<pre><code>&lt;Window x:Class=\"WindowDialog\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" \n    Title=\"WindowDialog\" \n    WindowStyle=\"SingleBorderWindow\" \n    WindowStartupLocation=\"CenterOwner\" SizeToContent=\"WidthAndHeight\"&gt;\n    &lt;ContentPresenter x:Name=\"DialogPresenter\" Content=\"{Binding .}\"&gt;\n\n    &lt;/ContentPresenter&gt;\n&lt;/Window&gt;\n</code></pre>\n\n<p>A problem with dialogs in wpf is the <code>dialogresult = true</code> can only be achieved in code.  That's why I created an interface for my <code>dialogviewmodel</code> to implement it. </p>\n\n<pre><code>public class RequestCloseDialogEventArgs : EventArgs\n{\n    public bool DialogResult { get; set; }\n    public RequestCloseDialogEventArgs(bool dialogresult)\n    {\n        this.DialogResult = dialogresult;\n    }\n}\n\npublic interface IDialogResultVMHelper\n{\n    event EventHandler&lt;RequestCloseDialogEventArgs&gt; RequestCloseDialog;\n}\n</code></pre>\n\n<p>Whenever my ViewModel thinks it's time for <code>dialogresult = true</code>, then raise this event.</p>\n\n<pre><code>public partial class DialogWindow : Window\n{\n    // Note: If the window is closed, it has no DialogResult\n    private bool _isClosed = false;\n\n    public DialogWindow()\n    {\n        InitializeComponent();\n        this.DialogPresenter.DataContextChanged += DialogPresenterDataContextChanged;\n        this.Closed += DialogWindowClosed;\n    }\n\n    void DialogWindowClosed(object sender, EventArgs e)\n    {\n        this._isClosed = true;\n    }\n\n    private void DialogPresenterDataContextChanged(object sender,\n                              DependencyPropertyChangedEventArgs e)\n    {\n        var d = e.NewValue as IDialogResultVMHelper;\n\n        if (d == null)\n            return;\n\n        d.RequestCloseDialog += new EventHandler&lt;RequestCloseDialogEventArgs&gt;\n                                    (DialogResultTrueEvent).MakeWeak(\n                                        eh =&gt; d.RequestCloseDialog -= eh;);\n    }\n\n    private void DialogResultTrueEvent(object sender, \n                              RequestCloseDialogEventArgs eventargs)\n    {\n        // Important: Do not set DialogResult for a closed window\n        // GC clears windows anyways and with MakeWeak it\n        // closes out with IDialogResultVMHelper\n        if(_isClosed) return;\n\n        this.DialogResult = eventargs.DialogResult;\n    }\n</code></pre>\n\n<p>Now at least I have to create a <code>DataTemplate</code> in my resource file(<code>app.xaml</code> or something):</p>\n\n<pre><code>&lt;DataTemplate DataType=\"{x:Type DialogViewModel:EditOrNewAuswahlItemVM}\" &gt;\n        &lt;DialogView:EditOrNewAuswahlItem/&gt;\n&lt;/DataTemplate&gt;\n</code></pre>\n\n<p>Well thats all, I can now call dialogs from my viewmodels:</p>\n\n<pre><code> var result = this.uiDialogService.ShowDialog(\"Dialogwindow Title\", dialogwindowVM);\n</code></pre>\n\n<p>Now my question, do you see any problems with this solution?</p>\n\n<p>Edit: for completeness. The ViewModel should implement <code>IDialogResultVMHelper</code> and then it can raise it within a <code>OkCommand</code> or something like this:</p>\n\n<pre><code>public class MyViewmodel : IDialogResultVMHelper\n{\n    private readonly Lazy&lt;DelegateCommand&gt; _okCommand;\n\n    public MyViewmodel()\n    {\n         this._okCommand = new Lazy&lt;DelegateCommand&gt;(() =&gt; \n             new DelegateCommand(() =&gt; \n                 InvokeRequestCloseDialog(\n                     new RequestCloseDialogEventArgs(true)), () =&gt; \n                         YourConditionsGoesHere = true));\n    }\n\n    public ICommand OkCommand\n    { \n        get { return this._okCommand.Value; } \n    }\n\n    public event EventHandler&lt;RequestCloseDialogEventArgs&gt; RequestCloseDialog;\n    private void InvokeRequestCloseDialog(RequestCloseDialogEventArgs e)\n    {\n        var handler = RequestCloseDialog;\n        if (handler != null) \n            handler(this, e);\n    }\n }\n</code></pre>\n\n<p>EDIT 2: I used the code from here to make my EventHandler register weak:<br>\n<a href=\"http://diditwith.net/2007/03/23/SolvingTheProblemWithEventsWeakEventHandlers.aspx\" rel=\"noreferrer\">http://diditwith.net/2007/03/23/SolvingTheProblemWithEventsWeakEventHandlers.aspx</a><br>\n(Website no longer exists, <a href=\"http://web.archive.org/web/20140319163345/http://diditwith.net/2007/03/23/SolvingTheProblemWithEventsWeakEventHandlers.aspx\" rel=\"noreferrer\">WebArchive Mirror</a>)</p>\n\n<pre><code>public delegate void UnregisterCallback&lt;TE&gt;(EventHandler&lt;TE&gt; eventHandler) \n    where TE : EventArgs;\n\npublic interface IWeakEventHandler&lt;TE&gt; \n    where TE : EventArgs\n{\n    EventHandler&lt;TE&gt; Handler { get; }\n}\n\npublic class WeakEventHandler&lt;T, TE&gt; : IWeakEventHandler&lt;TE&gt; \n    where T : class \n    where TE : EventArgs\n{\n    private delegate void OpenEventHandler(T @this, object sender, TE e);\n\n    private readonly WeakReference mTargetRef;\n    private readonly OpenEventHandler mOpenHandler;\n    private readonly EventHandler&lt;TE&gt; mHandler;\n    private UnregisterCallback&lt;TE&gt; mUnregister;\n\n    public WeakEventHandler(EventHandler&lt;TE&gt; eventHandler,\n                                UnregisterCallback&lt;TE&gt; unregister)\n    {\n        mTargetRef = new WeakReference(eventHandler.Target);\n\n        mOpenHandler = (OpenEventHandler)Delegate.CreateDelegate(\n                           typeof(OpenEventHandler),null, eventHandler.Method);\n\n        mHandler = Invoke;\n        mUnregister = unregister;\n    }\n\n    public void Invoke(object sender, TE e)\n    {\n        T target = (T)mTargetRef.Target;\n\n        if (target != null)\n            mOpenHandler.Invoke(target, sender, e);\n        else if (mUnregister != null)\n        {\n            mUnregister(mHandler);\n            mUnregister = null;\n        }\n    }\n\n    public EventHandler&lt;TE&gt; Handler\n    {\n        get { return mHandler; }\n    }\n\n    public static implicit operator EventHandler&lt;TE&gt;(WeakEventHandler&lt;T, TE&gt; weh)\n    {\n        return weh.mHandler;\n    }\n}\n\npublic static class EventHandlerUtils\n{\n    public static EventHandler&lt;TE&gt; MakeWeak&lt;TE&gt;(this EventHandler&lt;TE&gt; eventHandler, \n                                                    UnregisterCallback&lt;TE&gt; unregister)\n        where TE : EventArgs\n    {\n        if (eventHandler == null)\n            throw new ArgumentNullException(\"eventHandler\");\n\n        if (eventHandler.Method.IsStatic || eventHandler.Target == null)\n            throw new ArgumentException(\"Only instance methods are supported.\",\n                                            \"eventHandler\");\n\n        var wehType = typeof(WeakEventHandler&lt;,&gt;).MakeGenericType(\n                          eventHandler.Method.DeclaringType, typeof(TE));\n\n        var wehConstructor = wehType.GetConstructor(new Type[] \n                             { \n                                 typeof(EventHandler&lt;TE&gt;), typeof(UnregisterCallback&lt;TE&gt;) \n                             });\n\n        IWeakEventHandler&lt;TE&gt; weh = (IWeakEventHandler&lt;TE&gt;)wehConstructor.Invoke(\n                                        new object[] { eventHandler, unregister });\n\n        return weh.Handler;\n    }\n}\n</code></pre>\n",
      "up_vote_count": 127,
      "answer_count": 3,
      "view_count": 49272,
      "creation_date": 1285570596,
      "owner": {
        "display_name": "blindmeis",
        "profile_image": "https://www.gravatar.com/avatar/b8e089cbe8a7b8757bb6b17222fd661c?s=128&d=identicon&r=PG",
        "reputation": 16905,
        "badge_counts": {
          "gold": 6,
          "silver": 35,
          "bronze": 67,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "wpf",
        "mvvm",
        "modal-dialog"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "What is difference between MVC, MVP &amp; MVVM design pattern in terms of coding c#",
      "body": "<p>If we search Google using the phrase \"What is difference between MVC, MVP &amp; MVVM design pattern\" then we may get few URL's which discuss the difference between MVC MVP &amp; MVVM design pattern theoretically like</p>\n\n<p><strong>MVP</strong></p>\n\n<p>Use in situations where binding via a datacontext is not possible.\nWindows Forms is a perfect example of this.  In order to separate the view from the model, a presenter is needed.  Since the view cannot directly bind to the presenter, information must be passed to the view via an interface (IView). </p>\n\n<p><strong>MVVM</strong></p>\n\n<p>Use in situations where binding via a datacontext is possible.  Why?  The various IView interfaces for each view are removed which means less code to maintain.\nSome examples where MVVM is possible include WPF and javascript projects using Knockout. </p>\n\n<p><strong>MVC</strong></p>\n\n<p>Use in situations where the connection between the view and the rest of the program is not always available (and you can’t effectively employ MVVM or MVP).\nThis clearly describes the situation where a web API is separated from the data sent to the client browsers.  Microsoft’s ASP.NET MVC is a great tool for managing such situations and provides a very clear MVC framework </p>\n\n<p>But I have not found a single article which discuss the difference theoretically  along with sample code.</p>\n\n<p>It would be really nice if i get a article which discuss the difference between these 3 design patterns (MVC, MVP &amp; MVVM) along with code.</p>\n\n<p>I'd like to get my hands on source code of 3 similar <strong>CRUD</strong> apps which has been implemented by these three design patterns (MVC, MVP &amp; MVVM). So that I can go through the code and understand how one should write code for these three design patter (MVC, MVP &amp; MVVM). </p>\n\n<p>So if any such article exists which discuss how code would look different for these 3 design patterns (MVC, MVP &amp; MVVM) then please redirect me to that article.</p>\n",
      "up_vote_count": 125,
      "answer_count": 4,
      "view_count": 98620,
      "creation_date": 1382082949,
      "owner": {
        "display_name": "Thomas",
        "profile_image": "https://www.gravatar.com/avatar/322fd5def39c5f01ff5f0e9e94fdeb94?s=128&d=identicon&r=PG",
        "reputation": 13381,
        "badge_counts": {
          "gold": 83,
          "silver": 285,
          "bronze": 498,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "design-patterns",
        "model-view-controller",
        "mvvm",
        "mvp"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Handling the window closing event with WPF / MVVM Light Toolkit",
      "body": "<p>I'd like to handle the \"Closing\" event (when a user clicks the upper right 'X' button) of my window in order to eventually display a confirm message or/and cancel the closing.</p>\n\n<p>I know how to do this in the code-behind : subscribe to the \"Closing\" event of the window then use the \"CancelEventArgs.Cancel\" property.</p>\n\n<p>But I'm using MVVM so I'm not sure it's the good approach.</p>\n\n<p>I think the good approach would be to bind the Closing event to a Command in my ViewModel.</p>\n\n<p>I tried that :</p>\n\n<pre><code>    &lt;i:Interaction.Triggers&gt;\n        &lt;i:EventTrigger EventName=\"Closing\"&gt;\n            &lt;cmd:EventToCommand Command=\"{Binding CloseCommand}\" /&gt;\n        &lt;/i:EventTrigger&gt;\n    &lt;/i:Interaction.Triggers&gt;\n</code></pre>\n\n<p>With an associated RelayCommand in my ViewModel but it doesn't work (the command's code is not executed).</p>\n",
      "up_vote_count": 114,
      "answer_count": 12,
      "view_count": 139928,
      "creation_date": 1284110283,
      "owner": {
        "display_name": "Olivier Payen",
        "profile_image": "https://www.gravatar.com/avatar/895d49bd70d5489b98f9a8f1cf693b8c?s=128&d=identicon&r=PG",
        "reputation": 13275,
        "badge_counts": {
          "gold": 7,
          "silver": 35,
          "bronze": 66,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm",
        "mvvm-light"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Firing a double click event from a WPF ListView item using MVVM",
      "body": "<p>In a WPF application using MVVM, I have a usercontrol with a listview item. In run time, it will use databinding to fill the listview with a collection of objects.</p>\n\n<p>What is the correct way to attach a double click event to the items in the listview so that when an item in the list view is doubleclicked, A corresponding event in the view model is fired and has a reference to the item clicked?</p>\n\n<p>How can it be done in a clean MVVM way i.e. no code behind in the View?</p>\n",
      "up_vote_count": 92,
      "answer_count": 8,
      "view_count": 65761,
      "creation_date": 1245789304,
      "owner": {
        "display_name": "Emad",
        "profile_image": "https://www.gravatar.com/avatar/58b4d98462847173fe4eed3272b520c4?s=128&d=identicon&r=PG",
        "reputation": 1617,
        "badge_counts": {
          "gold": 4,
          "silver": 27,
          "bronze": 46,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Is MVVM pointless?",
      "body": "<p>Is orthodox MVVM implementation pointless?  I am creating a new application and I considered Windows Forms and WPF.  I chose WPF because it's future-proof and offer lots of flexibility.  There is less code and easier to make significant changes to your UI using XAML.  </p>\n\n<p>Since the choice for WPF is obvious, I figured that I may as well go all the way by using MVVM as my application architecture since it offers blendability, separation concerns and unit testability.  Theoretically, it seems beautiful like the holy grail of UI programming.  This brief adventure; however, has turned into a real headache.\nAs expected in practice, I’m finding that I’ve traded one problem for another.  I tend to be an obsessive programmer in that I want to do things the right way so that I can get the right results and possibly become a better programmer.   The MVVM pattern just flunked my test on productivity and has just turned into a big yucky hack!</p>\n\n<p>The clear case in point is adding support for a Modal dialog box. The correct way is to put up a dialog box and tie it to a view model.  Getting this to work is difficult.  In order to benefit from the MVVM pattern, you have to distribute code in several places throughout the layers of your application.  You also have to use esoteric programming constructs like templates and lamba expressions.  Stuff that makes you stare at the screen scratching your head.  This makes maintenance and debugging a nightmare waiting to happen as I recently discovered.   I had an about box working fine until I got an exception the second time I invoked it, saying that it couldn’t show the dialog box again once it is closed.  I had to add an event handler for the close functionality to the dialog window, another one in the IDialogView implementation of it and finally another in the IDialogViewModel.  I thought MVVM would save us from such extravagant hackery!</p>\n\n<p>There are several folks out there with competing solutions to this problem and they are all hacks and don’t provide a clean, easily reusable, elegant solution.   Most of the MVVM toolkits gloss over dialogs and when they do address them, they are just alert boxes that don’t require custom interfaces or view models.</p>\n\n<p>I’m planning on giving up on the MVVM view pattern, at least its orthodox implementation of it.  What do you think?  Has it been worth the trouble for you if you had any?  Am I just a incompetent programmer or does MVVM not what it's hyped up to be?</p>\n",
      "up_vote_count": 88,
      "answer_count": 8,
      "view_count": 8032,
      "creation_date": 1273424886,
      "owner": {
        "display_name": "Joel Rodgers",
        "profile_image": "https://www.gravatar.com/avatar/cf1e437fcf6ef509ca3a5efe722118f5?s=128&d=identicon&r=PG",
        "reputation": 2849,
        "badge_counts": {
          "gold": 4,
          "silver": 28,
          "bronze": 42,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        ".net",
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF OpenFileDialog with the MVVM pattern?",
      "body": "<p>I just started learning the MVVM pattern for WPF. I hit a wall: <strong>what do you do when you need to show an OpenFileDialog</strong>?</p>\n\n<p>Here's an example UI I'm trying to use it on:</p>\n\n<p><img src=\"https://i.stack.imgur.com/rKeux.png\" alt=\"alt text\"></p>\n\n<p>When the browse button is clicked, an OpenFileDialog should be shown. When the user selects a file from the OpenFileDialog, the file path should be displayed in the textbox.</p>\n\n<p>How can I do this with MVVM?</p>\n\n<p><strong>Update</strong>: How can I do this with MVVM and make it unit test-able? The solution below doesn't work for unit testing.</p>\n",
      "up_vote_count": 84,
      "answer_count": 4,
      "view_count": 49393,
      "creation_date": 1256427395,
      "owner": {
        "display_name": "Judah Himango",
        "profile_image": "https://www.gravatar.com/avatar/2142b1a501386ed0af9232862af48df9?s=128&d=identicon&r=PG",
        "reputation": 39326,
        "badge_counts": {
          "gold": 28,
          "silver": 139,
          "bronze": 187,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "openfiledialog"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM in WPF - How to alert ViewModel of changes in Model... or should I?",
      "body": "<p>I am going through some MVVM articles, primarily <a href=\"http://msdn.microsoft.com/en-us/magazine/dd419663.aspx\">this</a> and <a href=\"http://rachel53461.wordpress.com/2011/05/08/simplemvvmexample/\">this</a>.</p>\n\n<p>My specific question is: <strong>How do I communicate Model changes from the Model to the ViewModel?</strong> </p>\n\n<p>In Josh's article, I don't see that he does this. The ViewModel always asks the Model for properties. In Rachel's example, she does have the model implement <code>INotifyPropertyChanged</code>, and raises events from the model, but they are for consumption by the view itself (see her article/code for more detail on why she does this).  </p>\n\n<p>Nowhere do I see examples where the model alerts the ViewModel of changes to model properties.  This has me worried that perhaps it's not done for some reason.   <strong>Is there a pattern for alerting the ViewModel of changes in the Model?</strong>  It would seem to be necessary as (1) conceivably there are more than 1 ViewModel for each model, and (2) even if there is just one ViewModel, some action on the model might result in other properties being changed. </p>\n\n<p>I suspect that there might be answers/comments of the form \"Why would you want to do that?\" comments, so here's a description of my program.  I'm new to MVVM so perhaps my whole design is faulty.  I'll briefly describe it.</p>\n\n<p>I am programming up something that is more interesting (at least, to me!) than \"Customer\" or \"Product\" classes.  I am programming BlackJack.  </p>\n\n<p>I have a View that doesn't have any code behind and just relies on binding to properties and commands in the ViewModel (see Josh Smith's article).  </p>\n\n<p>For better or worse, I took the attitude that the Model should contain not just classes such as <code>PlayingCard</code>, <code>Deck</code>, but also the <code>BlackJackGame</code> class that keeps state of the whole game, and knows when the player has gone bust, the dealer has to draw cards, and what the player and dealer current score is (less than 21, 21, bust, etc.). </p>\n\n<p>From <code>BlackJackGame</code> I expose methods like \"DrawCard\" and it occurred to me that when a card is drawn, properties such as <code>CardScore</code>, and <code>IsBust</code> should be updated and these new values communicated to the ViewModel. Perhaps that's faulty thinking?  </p>\n\n<p>One could take the attitude that the ViewModel called the <code>DrawCard()</code> method so he should know to ask for an updated score and find out if he is bust or not.  Opinions?  </p>\n\n<p>In my ViewModel, I have the logic to grab an actual image of a playing card (based on suit,rank) and make it available for the view. The model should not be concerned with this (perhaps other ViewModel would just use numbers instead of playing card images).  Of course, perhaps some will tell me that the Model should not even have the concept of a BlackJack game and that should be handled in the ViewModel?</p>\n",
      "up_vote_count": 80,
      "answer_count": 11,
      "view_count": 67252,
      "creation_date": 1363372703,
      "owner": {
        "display_name": "Dave",
        "profile_image": "https://www.gravatar.com/avatar/4c26cc999586b87d902ed6ebf115ae5b?s=128&d=identicon&r=PG",
        "reputation": 2145,
        "badge_counts": {
          "gold": 7,
          "silver": 36,
          "bronze": 62,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM Routed and Relay Command",
      "body": "<p>What is the Difference between the <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.input.routedcommand.aspx\" rel=\"noreferrer\">RoutedCommand</a> and <a href=\"http://msdn.microsoft.com/en-us/magazine/dd419663.aspx#id0090051\" rel=\"noreferrer\">RelayCommand</a> ?\n When to use RoutedCommand and when to use RelayCommand in MVVM pattern ?</p>\n",
      "up_vote_count": 74,
      "answer_count": 4,
      "view_count": 48523,
      "creation_date": 1237202405,
      "owner": {
        "display_name": "user72799",
        "profile_image": "https://www.gravatar.com/avatar/9820948540ae0b61760a355be46bf6dc?s=128&d=identicon&r=PG",
        "reputation": 371,
        "badge_counts": {
          "gold": 1,
          "silver": 4,
          "bronze": 3,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "mvvm",
        "command",
        "relaycommand",
        "routedcommand"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF MVVM Why use ContentControl + DataTemplate Views rather than straight XAML Window Views?",
      "body": "<p>I have a question about MVVM in WPF that is driving me batty.</p>\n\n<p><strong>Why do something like this:?</strong></p>\n\n<p>MainWindow.xaml:</p>\n\n<pre><code>&lt;Window x:Class=\"MVVMProject.MainWindow\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"&gt;\n    &lt;Grid&gt;\n        &lt;ContentControl Content=\"{Binding}\"/&gt;\n    &lt;/Grid&gt;\n&lt;/Window&gt;\n</code></pre>\n\n<p>Have your ExampleView.xaml set up as:</p>\n\n<pre><code>&lt;ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:vms=\"clr-namespace:MVVMProject.ViewModels\"&gt;\n    &lt;DataTemplate DataType=\"{x:Type vms:ExampleVM}\" &gt;\n        &lt;Grid&gt;\n            &lt;ActualContent/&gt;\n        &lt;/Grid&gt;\n    &lt;/DataTemplate&gt;\n&lt;/ResourceDictionary&gt;\n</code></pre>\n\n<p>And create the window like this:</p>\n\n<pre><code>public partial class App : Application {\n\n    protected override void OnStartup(StartupEventArgs e) {\n\n        base.OnStartup(e);\n\n        MainWindow app = new MainWindow();\n        ExampleVM context = new ExampleVM();\n        app.DataContext = context;\n        app.Show();\n    }\n}\n</code></pre>\n\n<hr>\n\n<p><strong>When you can do it like this:?</strong></p>\n\n<p>App.xaml: (Set startup window/View)</p>\n\n<pre><code>&lt;Application x:Class=\"MVVMProject.App\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    StartupUri=\"ExampleView.xaml\"&gt;\n&lt;/Application&gt;\n</code></pre>\n\n<p>ExampleView.xaml: (a Window not a ResourceDictionary)</p>\n\n<pre><code>&lt;Window x:Class=\"MVVMProject.ExampleView\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:vms=\"clr-namespace:MVVMProject.ViewModels\"&gt;\n    &gt;\n    &lt;Window.DataContext&gt;\n        &lt;vms:ExampleVM /&gt;\n    &lt;/Window.DataContext&gt;\n\n    &lt;Grid&gt;\n        &lt;ActualContent/&gt;\n    &lt;/Grid&gt;\n&lt;/Window&gt;\n</code></pre>\n\n<hr>\n\n<p>Essentially it's <strong>\"View as DataTemplate\" (VaD) vs. \"View as Window\" (VaW)</strong></p>\n\n<p>Here is my understanding of the comparison: (Note I use VS 2008 so I lack Blendability &amp;/or other stuff)</p>\n\n<ul>\n<li>VaD: Lets you switch Views without closing the window. (This is not desirable for my project)</li>\n<li>VaD: VM knows absolutely nothing about the View, whereas in VaW it (only) has to be able to instantiate it when opening another window</li>\n<li>VaW: I can actually see my xaml rendered in the Designer (I can't\nwith VaD, at least in my current setup)  </li>\n<li>VaW: Works intuitively with\nopening and closing windows; each window has (is) a corresponding View\n(and ViewModel)</li>\n<li>VaD: ViewModel can pass along initial window width, height, resizability etc. through properties (whereas in VaW they are directly set in the Window)</li>\n<li>VaW: Can set FocusManager.FocusedElement (not sure how in VaD)</li>\n<li>VaW: Less files, since my window types (e.g. Ribbon, Dialog) are incorporated into their Views</li>\n</ul>\n\n<hr>\n\n<p>So what's going on here?  Can't I just build my windows in XAML, access their data cleanly through properties of the VM, and be done with it? The code-behind is the same (virtually nil). I'm struggling to understand why I should shuffle all the View stuff into a ResourceDictionary.\n(   But I don't want to do it <em>wrong</em> ;-)   )</p>\n\n<hr>\n\n<p>Does it even matter? Is there something I've missed?\nThanks a lot for reading. :O</p>\n\n<hr>\n\n<p><em>Thanks to Rachel Lim and Nick Polyak for my blossoming understanding of MVVM</em></p>\n\n<p>Edit: Minor flow change</p>\n",
      "up_vote_count": 68,
      "answer_count": 3,
      "view_count": 63012,
      "creation_date": 1383931133,
      "owner": {
        "display_name": "Simon F",
        "profile_image": "https://www.gravatar.com/avatar/d6494c77cfe5d972bec16c02b8c0669a?s=128&d=identicon&r=PG&f=1",
        "reputation": 621,
        "badge_counts": {
          "gold": 1,
          "silver": 7,
          "bronze": 14,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "xaml",
        "mvvm",
        "architecture"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "How to handle dependency injection in a WPF/MVVM application",
      "body": "<p>I am starting a new desktop application and I want to build it using MVVM and WPF.</p>\n\n<p>I am also intending to use TDD.</p>\n\n<p>The problem is that I don´t know how I should use an IoC container to inject my dependencies on my production code.</p>\n\n<p>Suppose I have the folowing class and interface:</p>\n\n<pre><code>public interface IStorage\n{\n    bool SaveFile(string content);\n}\n\npublic class Storage : IStorage\n{\n    public bool SaveFile(string content){\n        // Saves the file using StreamWriter\n    }\n}\n</code></pre>\n\n<p>And then I have another class that has <code>IStorage</code> as a dependency, suppose also that this class is a ViewModel or a business class...</p>\n\n<pre><code>public class SomeViewModel\n{\n    private IStorage _storage;\n\n    public SomeViewModel(IStorage storage){\n        _storage = storage;\n    }\n}\n</code></pre>\n\n<p>With this I can easily write unit tests to ensure that they are working properly, using mocks and etc.</p>\n\n<p>The problem is when it comes to use it in the real application. I know that I must have an IoC container that links a default implementation for the <code>IStorage</code> interface, but how may I to do it?</p>\n\n<p>For example, how would it be if I had the following xaml:</p>\n\n<pre><code>&lt;Window \n    ... xmlns definitions ...\n&gt;\n   &lt;Window.DataContext&gt;\n        &lt;local:SomeViewModel /&gt;\n   &lt;/Window.DataContext&gt;\n&lt;/Window&gt;\n</code></pre>\n\n<p>How can I correctly 'tell' WPF to inject dependencies in that case?</p>\n\n<p>Also, suppose I need an instance of <code>SomeViewModel</code> from my <code>cs</code> code, how should I do it?</p>\n\n<p>I feel I´m completely lost in this, I would appreciate any example or guidance of how is the best way to handle it.</p>\n\n<p>I am familiar with StructureMap, but I´m not an expert. Also, if there is a better/easier/out-of-the-box framework, please let me know.</p>\n\n<p>Thanks in advance.</p>\n",
      "up_vote_count": 64,
      "answer_count": 8,
      "view_count": 37650,
      "creation_date": 1408373812,
      "owner": {
        "display_name": "Fedaykin",
        "profile_image": "https://www.gravatar.com/avatar/bea92dbc617be7f9d81f3c101d1b8cad?s=128&d=identicon&r=PG",
        "reputation": 2995,
        "badge_counts": {
          "gold": 2,
          "silver": 13,
          "bronze": 29,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm",
        "dependency-injection",
        "dependencies"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM Madness: Commands",
      "body": "<p>I like MVVM. I don't love it, but like it. Most of it makes sense. But, I keep reading articles that encourage you to write a lot of code so that you can write XAML and don't have to write any code in the code-behind.</p>\n\n<p>Let me give you an example.</p>\n\n<p>Recently I wanted to hookup a command in my ViewModel to a ListView MouseDoubleClickEvent. I wasn't quite sure how to do this. Fortunately, Google has answers for everything. I found the following articles:</p>\n\n<ul>\n<li><a href=\"http://blog.functionalfun.net/2008/09/hooking-up-commands-to-events-in-wpf.html\" rel=\"noreferrer\">http://blog.functionalfun.net/2008/09/hooking-up-commands-to-events-in-wpf.html</a></li>\n<li><a href=\"http://joyfulwpf.blogspot.com/2009/05/mvvm-invoking-command-on-attached-event.html\" rel=\"noreferrer\">http://joyfulwpf.blogspot.com/2009/05/mvvm-invoking-command-on-attached-event.html</a></li>\n<li><a href=\"http://sachabarber.net/?p=514\" rel=\"noreferrer\">http://sachabarber.net/?p=514</a></li>\n<li><a href=\"http://geekswithblogs.net/HouseOfBilz/archive/2009/08/27/adventures-in-mvvm-ndash-binding-commands-to-any-event.aspx\" rel=\"noreferrer\">http://geekswithblogs.net/HouseOfBilz/archive/2009/08/27/adventures-in-mvvm-ndash-binding-commands-to-any-event.aspx</a></li>\n<li><a href=\"http://marlongrech.wordpress.com/2008/12/13/attachedcommandbehavior-v2-aka-acb/\" rel=\"noreferrer\">http://marlongrech.wordpress.com/2008/12/13/attachedcommandbehavior-v2-aka-acb/</a></li>\n</ul>\n\n<p>While the solutions were helpful in my understanding of commands, there were problems. Some of the aforementioned solutions rendered the WPF designer unusable because of a common hack of appending \"Internal\" after a dependency property; the WPF designer can't find it, but the CLR can. Some of the solutions didn't allow multiple commands to the same control. Some of the solutions didn't allow parameters.</p>\n\n<p>After experimenting for a few hours I just decided to do this:</p>\n\n<pre><code>private void ListView_MouseDoubleClick(object sender, MouseButtonEventArgs e) {\n    ListView lv = sender as ListView;\n    MyViewModel vm = this.DataContext as MyViewModel;\n\n    vm.DoSomethingCommand.Execute(lv.SelectedItem);\n}\n</code></pre>\n\n<p>So, MVVM purists, please tell me what's wrong with this? I can still Unit test my command. This seems very practical, but seems to violate the guideline of \"ZOMG... you have code in your code-behind!!!!\" Please share your thoughts.</p>\n\n<p>Thanks in advance.</p>\n",
      "up_vote_count": 60,
      "answer_count": 7,
      "view_count": 6686,
      "creation_date": 1263834282,
      "owner": {
        "display_name": "JP Richardson",
        "profile_image": "https://www.gravatar.com/avatar/0f56a5e429de009a27b0ae8f796ef2df?s=128&d=identicon&r=PG",
        "reputation": 20038,
        "badge_counts": {
          "gold": 30,
          "silver": 107,
          "bronze": 144,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "wpf",
        "design-patterns",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM Light Toolkit samples",
      "body": "<p>Does anyone know opensource WPF applications created using MVVM Light Toolkit? Or any samples?</p>\n",
      "up_vote_count": 58,
      "answer_count": 7,
      "view_count": 39725,
      "creation_date": 1271891385,
      "owner": {
        "display_name": "Neir0",
        "profile_image": "https://www.gravatar.com/avatar/8d90b82676f26dcdaa6b0ec462240eb2?s=128&d=identicon&r=PG",
        "reputation": 4491,
        "badge_counts": {
          "gold": 22,
          "silver": 59,
          "bronze": 114,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm",
        "toolkit",
        "mvvm-light"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Basic concepts of MVVM-- what should a ViewModel do?",
      "body": "<p>Trying to grasp the concepts of MVVM, I have already read several blogs and looked at a few projects.</p>\n\n<p>From what I understand, a <em>View</em> is dumb, it just knows how to present something that is passed to it.</p>\n\n<p><em>Models</em> are just the plain data, and a <em>ViewModel</em> is something that acts like a padding in between the two, that it should get information from the <em>Model</em> and pass it onto the <em>View</em>, and the <em>View</em> should know how to present it. Or the other way around, if the information in the <em>View</em> changes, it should pass on the change to the <em>Model</em>.</p>\n\n<p>But I still have no idea how to apply the concept. Can someone explain a very simple scenario so I can grasp the concept? I've already looked at several projects, but it still doesn't make complete sense, so if someone could write it out in plain English, that would be nice.</p>\n\n<p>Thanks :)</p>\n",
      "up_vote_count": 57,
      "answer_count": 5,
      "view_count": 15817,
      "creation_date": 1300981769,
      "owner": {
        "display_name": "RKM",
        "profile_image": "https://www.gravatar.com/avatar/cfb1c694ab7b89f0310b6c9640017148?s=128&d=identicon&r=PG",
        "reputation": 1301,
        "badge_counts": {
          "gold": 6,
          "silver": 28,
          "bronze": 38,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Why use MVVM?",
      "body": "<p>Okay, I have been looking into MVVM pattern, and each time I have previously tried looking into it, I gave up for a number of reasons:</p>\n\n<ol>\n<li>Unnecessary Extra Long Winded Coding</li>\n<li>No apparent advantages for coders (no designers in my office. Currently only myself soon to be another coder)</li>\n<li>Not a lot of resources/documentation of good practices! (Or at least hard to find)</li>\n<li>Cannot think of a single scenario where this is advantageous.</li>\n</ol>\n\n<p>I'm about to give up on it yet again, and thought I'd ask to see if someone answer the reasons above.</p>\n\n<p>I honestly can't see an advantage of using this for a single/partner coding. Even in complex projects with 10's of windows. To me the DataSet is a good enough view and binding like in the answer by <a href=\"https://stackoverflow.com/users/235666/brent\">Brent</a> following <a href=\"https://stackoverflow.com/questions/2652166/best-method-for-binding-combobox/2652700#2652700\">question</a></p>\n\n<p>Could someone show an example of where using MVVM pattern would of saved time when compared to XAML DataBinding.</p>\n\n<p>100% of my binding is done in XAML at the moment. And therefore I don't see the point of the VM as its just extra code behind that I need to write and depend on.</p>\n\n<p><strong>EDIT:</strong><br>\nAfter spending the afternoon researching about MVVM I have finally found something that made me realise the true benefits of it from this <a href=\"https://stackoverflow.com/questions/1644453/why-mvvm-and-what-are-its-core-benefits/1644955#1644955\">answer</a>.</p>\n",
      "up_vote_count": 58,
      "answer_count": 12,
      "view_count": 20913,
      "creation_date": 1271422931,
      "owner": {
        "display_name": "Michal Ciechan",
        "profile_image": "https://i.stack.imgur.com/RN48w.jpg?s=128&g=1",
        "reputation": 7503,
        "badge_counts": {
          "gold": 10,
          "silver": 48,
          "bronze": 87,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF MVVM: How to close a window",
      "body": "<p>I have a <code>Button</code> that closes my window when it's clicked:</p>\n\n<pre><code>&lt;Button x:Name=\"buttonOk\"  IsCancel=\"True\"&gt;Ok&lt;/Button&gt;\n</code></pre>\n\n<p>That's fine until I add a <code>Command</code> to the <code>Button</code> i.e.</p>\n\n<pre><code>&lt;Button x:Name=\"buttonOk\" \n        Command=\"{Binding SaveCommand}\" \n        IsCancel=\"True\"&gt;Ok&lt;/Button&gt;\n</code></pre>\n\n<p>Now it doesn't close presumably because I am handling the <code>Command</code>. I can fix this by putting an <code>EventHandler</code> in and calling <code>this.Close()</code> i.e. </p>\n\n<pre><code>&lt;Button x:Name=\"buttonOk\" \n        Click=\"closeWindow\" \n        Command=\"{Binding SaveCommand}\" \n        IsCancel=\"True\"&gt;Ok&lt;/Button&gt;\n</code></pre>\n\n<p>but now I have code in my code behind i.e. the method <code>SaveCommand</code>. I am using the MVVM pattern and <code>SaveCommand</code> is the only code in my code behind. </p>\n\n<p>How can I do this differently so as not to use code behind?</p>\n",
      "up_vote_count": 56,
      "answer_count": 18,
      "view_count": 84860,
      "creation_date": 1291724311,
      "owner": {
        "display_name": "Bob",
        "profile_image": "https://www.gravatar.com/avatar/650e975af044d6b2c19b321ab2bf3826?s=128&d=identicon&r=PG",
        "reputation": 1589,
        "badge_counts": {
          "gold": 9,
          "silver": 31,
          "bronze": 53,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "wpf",
        "xaml",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Android MVVM Design Pattern Examples",
      "body": "<p>I currently do a lot of WPF development and have started creating some basic Android apps. When creating WPF apps I often use MVVM, normally using Prism, and would like to know if there are any examples of MVVM for the Android platform?</p>\n",
      "up_vote_count": 56,
      "answer_count": 13,
      "view_count": 51166,
      "creation_date": 1297450788,
      "owner": {
        "display_name": "Tom Dudfield",
        "profile_image": "https://i.stack.imgur.com/o1qwB.jpg?s=128&g=1",
        "reputation": 2026,
        "badge_counts": {
          "gold": 2,
          "silver": 18,
          "bronze": 37,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "java",
        "android",
        "design-patterns",
        "mvvm",
        "dependency-injection"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Managing multiple selections with MVVM",
      "body": "<p>On my journey to learning MVVM I've established some basic understanding of WPF and the ViewModel pattern. I'm using the following abstraction when providing a list and am interested in a single selected item.</p>\n\n<pre><code>public ObservableCollection&lt;OrderViewModel&gt; Orders { get; private set; }\npublic ICollectionView OrdersView\n{\n    get\n    {\n        if( _ordersView == null )\n            _ordersView = CollectionViewSource.GetDefaultView( Orders );\n        return _ordersView;\n    }\n}\nprivate ICollectionView _ordersView;\n\npublic OrderViewModel CurrentOrder \n{ \n    get { return OrdersView.CurrentItem as OrderViewModel; } \n    set { OrdersView.MoveCurrentTo( value ); } \n}\n</code></pre>\n\n<p>I can then bind the OrdersView along with supporting sorting and filtering to a list in WPF:</p>\n\n<pre><code>&lt;ListView ItemsSource=\"{Binding Path=OrdersView}\" \n          IsSynchronizedWithCurrentItem=\"True\"&gt;\n</code></pre>\n\n<p>This works really well for single selection views. But I'd like to also support multiple selections in the view and have the model bind to the list of selected items. </p>\n\n<p>How would I bind the ListView.SelectedItems to a backer property on the ViewModel?</p>\n",
      "up_vote_count": 55,
      "answer_count": 4,
      "view_count": 44237,
      "creation_date": 1241022910,
      "owner": {
        "display_name": "Paul Alexander",
        "profile_image": "https://www.gravatar.com/avatar/7094bef129a85ebc3ad19703b584e934?s=128&d=identicon&r=PG",
        "reputation": 23727,
        "badge_counts": {
          "gold": 7,
          "silver": 80,
          "bronze": 135,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "data-binding",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "The best approach to create new window in WPF using MVVM",
      "body": "<p>In the neighbour post: <a href=\"https://stackoverflow.com/questions/501886/wpf-mvvm-newbie-how-should-the-viewmodel-close-the-form/2100824#2100824\">How should the ViewModel close the form?</a>\nI've posted my vision how to close windows with MVVM usage. And now I have a question: how to open them.</p>\n\n<p>I have a main window (main view). If user clicks on the \"Show\" button then \"Demo\" window (modal dialog) should be displayed. What is a preferable way to create and open windows using MVVM pattern? I see two general approaches:</p>\n\n<p>The 1st one (probably the simplest). Event handler \"ShowButton_Click\" should be implemented in the code behind of the main window in way like this:   </p>\n\n<pre><code>        private void ModifyButton_Click(object sender, RoutedEventArgs e)\n        {\n            ShowWindow wnd = new ShowWindow(anyKindOfData);\n            bool? res = wnd.ShowDialog();\n            if (res != null &amp;&amp; res.Value)\n            {\n                //  ... store changes if neecssary\n            }\n        }\n</code></pre>\n\n<ol>\n<li>If we \"Show\" button state should be changed (enabled/disabled) we will need to add logic that will manage button state;</li>\n<li>The source code is very similar to \"old-style\" WinForms and MFC sources - I not sure if this is good or bad, please advise.</li>\n<li>Something else that I've missed?</li>\n</ol>\n\n<p>Another approach: </p>\n\n<p>In the MainWindowViewModel we will implement \"ShowCommand\" property that will return ICommand interface of the command. Comman in turn:</p>\n\n<ul>\n<li>will raise \"ShowDialogEvent\";</li>\n<li>will manage button state.</li>\n</ul>\n\n<p>This approach will be more suitable for the MVVM but will require additional coding: ViewModel class can't \"show dialog\" so MainWindowViewModel will only raise \"ShowDialogEvent\", the MainWindowView we will need to add event handler in its MainWindow_Loaded method, something like this:</p>\n\n<pre><code>((MainWindowViewModel)DataContext).ShowDialogEvent += ShowDialog;\n</code></pre>\n\n<p>(ShowDialog - similar to the 'ModifyButton_Click' method.)</p>\n\n<p>So my questions are:\n 1. Do you see any other approach?\n 2. Do you think one of the listed is good or bad? (why?)</p>\n\n<p>Any other thoughts are welcome.</p>\n\n<p>Thanks.</p>\n",
      "up_vote_count": 54,
      "answer_count": 6,
      "view_count": 48052,
      "creation_date": 1264074919,
      "owner": {
        "display_name": "Budda",
        "profile_image": "https://www.gravatar.com/avatar/f8e04388338cbad0ce0f36ddd68f292f?s=128&d=identicon&r=PG",
        "reputation": 8377,
        "badge_counts": {
          "gold": 25,
          "silver": 95,
          "bronze": 178,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM: Binding radio buttons to a view model?",
      "body": "<p><strong>EDIT:</strong> Problem was fixed in .NET 4.0.</p>\n\n<p>I have been trying to bind a group of radio buttons to a view model using the <code>IsChecked</code> button. After reviewing other posts, it appears that the <code>IsChecked</code> property simply doesn't work. I have put together a short demo that reproduces the problem, which I have included below.</p>\n\n<p>Here is my question: Is there a straightforward and reliable way to bind radio buttons using MVVM? Thanks.</p>\n\n<p><strong>Additional information:</strong> The <code>IsChecked</code> property doesn't work for two reasons:</p>\n\n<ol>\n<li><p>When a button is selected, the IsChecked properties of other buttons in the group don't get set to <em>false</em>.</p></li>\n<li><p>When a button is selected, its own IsChecked property does not get set after the first time the button is selected. I am guessing that the binding is getting trashed by WPF on the first click.</p></li>\n</ol>\n\n<p><strong>Demo project:</strong> Here is the code and markup for a simple demo that reproduces the problem. Create a WPF project and replace the markup in Window1.xaml with the following:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;Window x:Class=\"WpfApplication1.Window1\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    Title=\"Window1\" Height=\"300\" Width=\"300\" Loaded=\"Window_Loaded\"&gt;\n    &lt;StackPanel&gt;\n        &lt;RadioButton Content=\"Button A\" IsChecked=\"{Binding Path=ButtonAIsChecked, Mode=TwoWay}\" /&gt;\n        &lt;RadioButton Content=\"Button B\" IsChecked=\"{Binding Path=ButtonBIsChecked, Mode=TwoWay}\" /&gt;\n    &lt;/StackPanel&gt;\n&lt;/Window&gt;\n</code></pre>\n\n<p>Replace the code in Window1.xaml.cs with the following code (a hack), which sets the view model:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>using System.Windows;\n\nnamespace WpfApplication1\n{\n    /// &lt;summary&gt;\n    /// Interaction logic for Window1.xaml\n    /// &lt;/summary&gt;\n    public partial class Window1 : Window\n    {\n        public Window1()\n        {\n            InitializeComponent();\n        }\n\n        private void Window_Loaded(object sender, RoutedEventArgs e)\n        {\n            this.DataContext = new Window1ViewModel();\n        }\n    }\n}\n</code></pre>\n\n<p>Now add the following code to the project as <code>Window1ViewModel.cs</code>:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>using System.Windows;\n\nnamespace WpfApplication1\n{\n    public class Window1ViewModel\n    {\n        private bool p_ButtonAIsChecked;\n\n        /// &lt;summary&gt;\n        /// Summary\n        /// &lt;/summary&gt;\n        public bool ButtonAIsChecked\n        {\n            get { return p_ButtonAIsChecked; }\n            set\n            {\n                p_ButtonAIsChecked = value;\n                MessageBox.Show(string.Format(\"Button A is checked: {0}\", value));\n            }\n        }\n\n        private bool p_ButtonBIsChecked;\n\n        /// &lt;summary&gt;\n        /// Summary\n        /// &lt;/summary&gt;\n        public bool ButtonBIsChecked\n        {\n            get { return p_ButtonBIsChecked; }\n            set\n            {\n                p_ButtonBIsChecked = value;\n                MessageBox.Show(string.Format(\"Button B is checked: {0}\", value));\n            }\n        }\n\n    }\n}\n</code></pre>\n\n<p>To reproduce the problem, run the app and click Button A. A message box will appear, saying that Button A's <code>IsChecked</code> property has been set to <em>true</em>. Now select Button B. Another message box will appear, saying that Button B's <code>IsChecked</code> property has been set to <em>true</em>, but there is no message box indicating that Button A's <code>IsChecked</code> property has been set to <em>false</em>--the property hasn't been changed.</p>\n\n<p>Now click Button A again. The button will be selected in the window, but no message box will appear--the <code>IsChecked</code> property has not been changed. Finally, click on Button B again--same result. The <code>IsChecked</code> property is not updated at all for either button after the button is first clicked.</p>\n",
      "up_vote_count": 54,
      "answer_count": 11,
      "view_count": 57052,
      "creation_date": 1266444354,
      "owner": {
        "display_name": "David Veeneman",
        "profile_image": "https://www.gravatar.com/avatar/47795e25607ada410037c3b57a4a7434?s=128&d=identicon&r=PG",
        "reputation": 10428,
        "badge_counts": {
          "gold": 24,
          "silver": 103,
          "bronze": 171,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm",
        "binding",
        "radio-button"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Select multiple items from a DataGrid in an MVVM WPF project",
      "body": "<p>How can I select multiple items from a <code>DataGrid</code> in an MVVM WPF project?</p>\n",
      "up_vote_count": 53,
      "answer_count": 8,
      "view_count": 46341,
      "creation_date": 1396629765,
      "owner": {
        "display_name": "MegaMind",
        "profile_image": "https://i.stack.imgur.com/nNoSX.jpg?s=128&g=1",
        "reputation": 1517,
        "badge_counts": {
          "gold": 11,
          "silver": 39,
          "bronze": 77,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "xaml",
        "mvvm",
        "datagrid"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Proper validation with MVVM",
      "body": "<p><em>Warning: Very long and detailed post.</em></p>\n\n<p>Okay, validation in WPF when using MVVM. I’ve read many things now, looked at many SO questions, and tried <em>many</em> approaches, but everything feels somewhat hacky at some point and I’m really not sure how to do it <em>the right way</em>™.</p>\n\n<p>Ideally, I want to have all validation happen in the view model using <a href=\"http://msdn.microsoft.com/en-us/library/system.componentmodel.idataerrorinfo.aspx\" rel=\"nofollow noreferrer\"><code>IDataErrorInfo</code></a>; so that’s what I did. There are however different aspects that make this solution be not a complete solution for the whole validation topic.</p>\n\n<h3>The situation</h3>\n\n<p>Let’s take the following simple form. As you can see, it’s nothing fancy. We just have a two textboxes which bind to a <code>string</code> and <code>int</code> property in the view model each. Furthermore we have a button that is bound to an <code>ICommand</code>.</p>\n\n<p><img src=\"https://i.stack.imgur.com/UqvT1.png\" alt=\"Simple form with only a string and integer input\"></p>\n\n<p>So for the validation we now have a two choices:</p>\n\n<ol>\n<li>We can run the validation automatically whenever the value of a text box changes. As such the user gets an instant response when he entered something invalid.\n\n<ul>\n<li>We can take this one step further to disable the button when there are any errors.</li>\n</ul></li>\n<li>Or we can run the validation only explicitly when the button is pressed, then showing all errors if applicable. Obviously we can’t disable the button on errors here.</li>\n</ol>\n\n<p>Ideally, I want to implement choice 1. For normal data bindings with activated <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.data.binding.validatesondataerrors.aspx\" rel=\"nofollow noreferrer\"><code>ValidatesOnDataErrors</code></a> this is default behavior. So when the text changes, the binding updates the source and triggers the <code>IDataErrorInfo</code> validation for that property; errors are reported back the view. So far so good.</p>\n\n<h3>Validation status in the view model</h3>\n\n<p>The interesting bit is to let the view model, or the button in this case, know if there are any errors. The way <code>IDataErrorInfo</code> works, it is mainly there to report errors back to the view. So the view can easily see if there are any errors, display them and even show annotations using <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.controls.validation.errors.aspx\" rel=\"nofollow noreferrer\"><code>Validation.Errors</code></a>. Furthermore, validation always happens looking at a single property.</p>\n\n<p>So having the view model know when there are any errors, or if the validation succeeded, is tricky. A common solution is to simply trigger the <code>IDataErrorInfo</code> validation for all properties in the view model itself. This is often done using a separate <code>IsValid</code> property. The benefit is that this can also be easily used for disabling the command. The drawback is that this might run the validation on all properties a bit too often, but most validations should be simply enough to not hurt the performance. Another solution would be to remember which properties produced errors using the validation and only check those, but that seems a bit overcomplicated and unnecessary for most times.</p>\n\n<p>The bottom line is that this could work fine. <code>IDataErrorInfo</code> provides the validation for all properties, and we can simply use that interface in the view model itself to run the validation there too for the whole object. Introducing the problem:</p>\n\n<h3>Binding exceptions</h3>\n\n<p>The view model uses actual types for its properties. So in our example, the integer property is an actual <code>int</code>. The text box used in the view however natively only supports <em>text</em>. So when binding to the <code>int</code> in the view model, the data binding engine will automatically perform type conversions—or at least it will try. If you can enter text in a text box meant for numbers, the chances are high that there won’t always be valid numbers inside: So the data binding engine will fail to convert and throw a <code>FormatException</code>.</p>\n\n<p><img src=\"https://i.stack.imgur.com/NK46t.png\" alt=\"Data binding engine throws an exception and that’s displayed in the view\"></p>\n\n<p>On the view side, we can easily see that. Exceptions from the binding engine are automatically caught by WPF and are displayed as errors—there isn’t even a need to enable <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.data.binding.validatesonexceptions.aspx\" rel=\"nofollow noreferrer\"><code>Binding.ValidatesOnExceptions</code></a> which would be required for exceptions thrown in the setter. The error messages do have a generic text though, so that could be a problem. I have solved this for myself by using a <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.data.binding.updatesourceexceptionfilter.aspx\" rel=\"nofollow noreferrer\"><code>Binding.UpdateSourceExceptionFilter</code></a> handler, inspecting the exception being thrown and looking at the source property and then generating a less generic error message instead. All that capsulated away into my own Binding markup extension, so I can have all the defaults I need.</p>\n\n<p>So the view is fine. The user makes an error, sees some error feedback and can correct it. The view model however <em>is lost</em>. As the binding engine threw the exception, the source was never updated. So the view model is still on the old value, which isn’t what’s being displayed to the user, and the <code>IDataErrorInfo</code> validation obviously doesn’t apply.</p>\n\n<p>What’s worse, there is no good way for the view model to know this. At least, I haven’t found a good solution for this yet. What would be possible is to have the view report back to the view model that there was an error. This could be done by data binding the <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.controls.validation.haserror.aspx\" rel=\"nofollow noreferrer\"><code>Validation.HasError</code></a> property back to the view model (which isn’t possible directly), so the view model could check the view’s state first.</p>\n\n<p>Another option would be to relay the exception handled in <code>Binding.UpdateSourceExceptionFilter</code> to the view model, so it would be notified of it as well. The view model could even provide some interface for the binding to report these things, allowing for custom error messages instead of generic per-type ones. But that would create a stronger coupling from the view to the view model, which I generally want to avoid.</p>\n\n<p>Another “solution” would be to get rid of all typed properties, use plain <code>string</code> properties and do the conversion in the view model instead. This obviously would move all validation to the view model, but also mean an incredible amount of duplication of things the data binding engine usually takes care of. Furthermore it would change the semantics of the view model. For me, a view is built for the view model and not the reverse—of course the design of the view model depends on what we imagine the view to do, but there’s still general freedom how the view does that. So the view model defines an <code>int</code> property because there is a number; the view can now use a text box (allowing all these problems), or use something that natively works with numbers. So no, changing the types of the properties to <code>string</code> is not an option for me.</p>\n\n<p>In the end, this is a problem of the view. The view (and its data binding engine) is responsible for giving the view model proper values to work with. But in this case, there seems to be no good way to tell the view model that it should invalidate the old property value.</p>\n\n<h3>BindingGroups</h3>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/system.windows.data.bindinggroup.aspx\" rel=\"nofollow noreferrer\">Binding groups</a> are one way I tried to tackle this. Binding groups have the ability to group all validations, including <code>IDataErrorInfo</code> and thrown exceptions. If available to the view model, they even have a mean to check the validation status for <em>all</em> of those validation sources, for example using <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.data.bindinggroup.commitedit.aspx\" rel=\"nofollow noreferrer\"><code>CommitEdit</code></a>.</p>\n\n<p>By default, binding groups implement choice 2 from above. They make the bindings update explicitly, essentially adding an additional <em>uncommitted</em> state. So when clicking the button, the command can <em>commit</em> those changes, trigger the source updates and all validations and get a single result if it succeeded. So the command’s action could be this:</p>\n\n<pre><code> if (bindingGroup.CommitEdit())\n     SaveEverything();\n</code></pre>\n\n<p><code>CommitEdit</code> will only return true if <em>all</em> validations succeeded. It will take <code>IDataErrorInfo</code> into account and also check binding exceptions. This seems to be a perfect solution for choice 2. The only thing that is a bit of a hassle is managing the binding group with the bindings, but I’ve built myself something that mostly takes care of this (<a href=\"https://stackoverflow.com/q/17596719/216074\">related</a>).</p>\n\n<p>If a binding group is present for a binding, the binding will default to an explicit <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.data.updatesourcetrigger.aspx\" rel=\"nofollow noreferrer\"><code>UpdateSourceTrigger</code></a>. To implement choice 1 from above using binding groups, we basically have to change the trigger. As I have a custom binding extension anyway, this is rather simple, I just set it to <code>LostFocus</code> for all.</p>\n\n<p>So now, the bindings will still update whenever a text field changes. If the source could be updated (binding engine throws no exception) then <code>IDataErrorInfo</code> will run as usual. If it couldn’t be updated the view is still able to see it. And if we click our button, the underlying command can call <code>CommitEdit</code> (although nothing needs to be committed) and get the total validation result to see if it can continue.</p>\n\n<p>We might not be able to disable the button easily this way. At least not from the view model. Checking the validation over and over is not really a good idea just to update the command status, and the view model isn’t notified when a binding engine exception is thrown anyway (which should disable the button then)—or when it goes away to enable the button again. We could still add a trigger to disable the button in the view using the <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.controls.validation.haserror.aspx\" rel=\"nofollow noreferrer\"><code>Validation.HasError</code></a> so it’s not impossible.</p>\n\n<h3>Solution?</h3>\n\n<p>So overall, this seems to be the perfect solution. What is my problem with it though? To be honest, I’m not entirely sure. Binding groups are a complex thing that seem to be usually used in smaller groups, possibly having multiple binding groups in a single view. By using one big binding group for the whole view just to ensure my validation, it feels as if I’m abusing it. And I just keep thinking, that there must be a better way to solve this whole situation, because surely I can’t be the only one having these problems. And so far I haven’t really seen many people use binding groups for validation with MVVM at all, so it just feels odd.</p>\n\n<p>So, what exactly is the proper way to do validation in WPF with MVVM while being able to check for binding engine exceptions?</p>\n\n<hr>\n\n<h2>My solution (/hack)</h2>\n\n<p>First of all, thanks for your input! As I have written above, I’m using <code>IDataErrorInfo</code> already to do my data validation and I personally believe it’s the most comfortable utility to do the validation job. I’m using utilities similar to what Sheridan suggested in his answer below, so maintaining works fine too.</p>\n\n<p>In the end, my problem boiled down to the binding exception issue, where the view model just wouldn’t know about when it happened. While I could handle this with binding groups as detailed above, I still decided against it, as I just didn’t feel all that comfortable with it. So what did I do instead?</p>\n\n<p>As I mentioned above, I detect binding exceptions on the view-side by listening to a binding’s <code>UpdateSourceExceptionFilter</code>. In there, I can get a reference to the view model from the binding expression’s <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.data.bindingexpression.dataitem.aspx\" rel=\"nofollow noreferrer\"><code>DataItem</code></a>. I then have an interface <code>IReceivesBindingErrorInformation</code> which registers the view model as a possible receiver for information about binding errors. I then use that to pass the binding path and the exception to the view model:</p>\n\n<pre><code>object OnUpdateSourceExceptionFilter(object bindExpression, Exception exception)\n{\n    BindingExpression expr = (bindExpression as BindingExpression);\n    if (expr.DataItem is IReceivesBindingErrorInformation)\n    {\n        ((IReceivesBindingErrorInformation)expr.DataItem).ReceiveBindingErrorInformation(expr.ParentBinding.Path.Path, exception);\n    }\n\n    // check for FormatException and produce a nicer error\n    // ...\n }\n</code></pre>\n\n<p>In the view model I then remember whenever I am notified about a path’s binding expression:</p>\n\n<pre><code>HashSet&lt;string&gt; bindingErrors = new HashSet&lt;string&gt;();\nvoid IReceivesBindingErrorInformation.ReceiveBindingErrorInformation(string path, Exception exception)\n{\n    bindingErrors.Add(path);\n}\n</code></pre>\n\n<p>And whenever the <code>IDataErrorInfo</code> revalidates a property, I know that the binding worked, and I can clear the property from the hash set.</p>\n\n<p>In the view model I then can check if the hash set contains any items and abort any action that requires the data to be validated completely. It might not be the nicest solution due to the coupling from the view to the view model, but using that interface it’s at least somewhat less a problem.</p>\n",
      "up_vote_count": 49,
      "answer_count": 4,
      "view_count": 21700,
      "creation_date": 1382368886,
      "owner": {
        "display_name": "poke",
        "profile_image": "https://www.gravatar.com/avatar/609c93bafd659500f83fde04802a9be5?s=128&d=identicon&r=PG",
        "reputation": 169902,
        "badge_counts": {
          "gold": 36,
          "silver": 275,
          "bronze": 325,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "validation",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Good Silverlight-MVVM Practice Example",
      "body": "<p>I've read a number of good articles about the Model-View-ViewModel pattern and my team intends to implement this pattern in the latest version of our app.  I still don't quite get ALL the bits that go together to make this work.  I'd like to find a good example of this pattern that I can work through.  Something on a small scale, much like Jason Dolinger does in his video <a href=\"http://blog.lab49.com/archives/2650\" rel=\"noreferrer\">here</a>, but I'd like something that I can work through on my own at a slower pace.</p>\n\n<p>Thanks in advance for your help.</p>\n",
      "up_vote_count": 48,
      "answer_count": 8,
      "view_count": 54359,
      "creation_date": 1231169339,
      "owner": {
        "display_name": "Steve Brouillard",
        "profile_image": "https://www.gravatar.com/avatar/71d62b493abd6bb72635641d2d41b116?s=128&d=identicon&r=PG",
        "reputation": 1872,
        "badge_counts": {
          "gold": 3,
          "silver": 36,
          "bronze": 54,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "silverlight",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "In MVVM model should the model implement INotifyPropertyChanged interface?",
      "body": "<p>I have clear idea about <code>View</code> and <code>ViewModel</code> in MVVM pattern. I am planning to implement MVVM pattern in my application. I'm facing an issue regarding the model. I have .xml file which parsed and showed the information on the View.</p>\n\n<p>I need to be notified about the changes in the model for the first time only. From onwards on demand I need to be notified.</p>\n\n<p>So how to implement the model? </p>\n\n<p>Should I implement <code>INotifyPropertyChanged</code> interface in model class also? (I read that model should not implement <code>INotifyPropertyChanged</code> interface, since it is WPF specific)</p>\n",
      "up_vote_count": 47,
      "answer_count": 6,
      "view_count": 18057,
      "creation_date": 1312349971,
      "owner": {
        "display_name": "Syed",
        "profile_image": "https://www.gravatar.com/avatar/e46b3e3d71c83465a3e5c3c2e2a97070?s=128&d=identicon&r=PG",
        "reputation": 450,
        "badge_counts": {
          "gold": 1,
          "silver": 6,
          "bronze": 8,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        ".net",
        "wpf",
        "design-patterns",
        "mvvm",
        "inotifypropertychanged"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF (MVVM): Closing a view from Viewmodel?",
      "body": "<p>Anybody come across a clever way of closing a view in a viewmodel using MVVM?</p>\n\n<p>Maybe there is a way of using binding to signal the view (window) to close?</p>\n\n<p>I would really appreciate any input anyone has.</p>\n\n<p>Basically i have a loginView that is bound to a loginViewModel, in the viewmodel (using binding on a command) i test to see if the login is successful and if it is i basically load up a new View (mainview) and attach its datacontext... </p>\n\n<p>but i still have the loginView shown - so i need to signal it to unload..</p>\n\n<p>I was also hoping for a generic solution because i am sure that i am going to need to do this sort of thing in other situations</p>\n\n<p>Any ideas?</p>\n",
      "up_vote_count": 46,
      "answer_count": 11,
      "view_count": 44065,
      "creation_date": 1254079020,
      "owner": {
        "display_name": "mark smith",
        "profile_image": "https://www.gravatar.com/avatar/990752653c19c5093055304680900a57?s=128&d=identicon&r=PG",
        "reputation": 8258,
        "badge_counts": {
          "gold": 40,
          "silver": 119,
          "bronze": 180,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "wpftoolkit"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF MVVM Focus Field on Load",
      "body": "<p>I have a View that has a single <code>TextBox</code> and a couple <code>Button</code>s below it. When the window loads I want that <code>TextBox</code> to have focus. </p>\n\n<p>If I was not using MVVM I would just call <code>TextBox.Focus()</code> in the Loaded event. However my ViewModel does not know about my view so how can I accomplish this without putting code into the codebehind of my view?</p>\n\n<p>EDIT:\nAfter reading the answers I decided to put this code in the view xaml</p>\n\n<pre><code>&lt;DockPanel FocusManager.FocusedElement=\"{Binding ElementName=MessageTextBox}\"&gt;    \n    &lt;TextBox Name=\"MessageTextBox\" Text=\"{Binding Message}\"/&gt;\n&lt;/DockPanel&gt;\n</code></pre>\n\n<p>If this were anything other than initial page focus I would probably recommend Jon Galloway's answer since it can be controlled from the ViewModel.</p>\n",
      "up_vote_count": 46,
      "answer_count": 6,
      "view_count": 25769,
      "creation_date": 1248449570,
      "owner": {
        "display_name": "Shaun Bowe",
        "profile_image": "https://i.stack.imgur.com/D1T9d.jpg?s=128&g=1",
        "reputation": 5471,
        "badge_counts": {
          "gold": 9,
          "silver": 35,
          "bronze": 63,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm",
        "textbox",
        "focus"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "What are the pros and cons of View-first vs. ViewModel-first in the MVVM pattern",
      "body": "<p>I'm giving a presentation on using MVVM in real world applications and I'm including a section on the <strike>religious wars</strike> design decisions involved when using MVVM as a pattern in your application. In an MVVM application there are two main ways (that I know of) to instantiate a new View/ViewModel pair:</p>\n\n<ol>\n<li><strong>View-First</strong> in which you create a view and it creates its own ViewModel and sets it to its DataContext.</li>\n<li><strong>ViewModel-First</strong> in which you create new view models and create new views in response to changes in ViewModel properties, usually with ItemsControls and/or DataTemplates.</li>\n</ol>\n\n<p>In your experience what are the pros and cons of each method? What do they enable and what problems do you run into with each?</p>\n\n<h3>Result Summary</h3>\n\n<hr>\n\n<ul>\n<li><strong>View First</strong> - Pros\n\n<ul>\n<li>Easy to track which ViewModel is used by a View</li>\n</ul></li>\n<li><strong>View First</strong> - Cons\n\n<ul>\n<li>Doesn't allow a single View to be easily used with multiple ViewModels</li>\n<li>Requires extra events to handle communication between Views and ViewModels</li>\n</ul></li>\n<li><strong>ViewModel First</strong> - Pros\n\n<ul>\n<li>Allows more complete testing of logic to open new Views and ViewModels</li>\n<li>Tends to be DRYer as applications get larger</li>\n<li>View and ViewModel are more independent and can be worked on separately more easily</li>\n</ul></li>\n<li><strong>ViewModel First</strong> - Cons\n\n<ul>\n<li>More difficult to set up in Silverlight without DataTemplateSelector and typed DataTemplates.</li>\n</ul></li>\n</ul>\n",
      "up_vote_count": 44,
      "answer_count": 6,
      "view_count": 11564,
      "creation_date": 1285091876,
      "owner": {
        "display_name": "Bryan Anderson",
        "profile_image": "https://www.gravatar.com/avatar/d1492497b3750424e0d1d4d0da21cf22?s=128&d=identicon&r=PG",
        "reputation": 12419,
        "badge_counts": {
          "gold": 4,
          "silver": 58,
          "bronze": 77,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM Passing EventArgs As Command Parameter",
      "body": "<p>I'm using Microsoft Expression Blend 4<br>\nI have a Browser ..,  </p>\n\n<p><strong>[ XAML ]</strong> ConnectionView \" Empty Code Behind \"</p>\n\n<pre><code>        &lt;WebBrowser local:AttachedProperties.BrowserSource=\"{Binding Source}\"&gt;\n            &lt;i:Interaction.Triggers&gt;\n                &lt;i:EventTrigger&gt;\n                    &lt;i:InvokeCommandAction Command=\"{Binding LoadedEvent}\"/&gt;\n                &lt;/i:EventTrigger&gt;\n                &lt;i:EventTrigger EventName=\"Navigated\"&gt;\n                    &lt;i:InvokeCommandAction Command=\"{Binding NavigatedEvent}\" CommandParameter=\"??????\"/&gt;\n                &lt;/i:EventTrigger&gt;\n            &lt;/i:Interaction.Triggers&gt;\n        &lt;/WebBrowser&gt;  \n</code></pre>\n\n<p><strong>[ C# ]</strong> <em>AttachedProperties class</em>  </p>\n\n<pre><code>public static class AttachedProperties\n    {\n        public static readonly DependencyProperty BrowserSourceProperty = DependencyProperty . RegisterAttached ( \"BrowserSource\" , typeof ( string ) , typeof ( AttachedProperties ) , new UIPropertyMetadata ( null , BrowserSourcePropertyChanged ) );\n\n        public static string GetBrowserSource ( DependencyObject _DependencyObject )\n        {\n            return ( string ) _DependencyObject . GetValue ( BrowserSourceProperty );\n        }\n\n        public static void SetBrowserSource ( DependencyObject _DependencyObject , string Value )\n        {\n            _DependencyObject . SetValue ( BrowserSourceProperty , Value );\n        }\n\n        public static void BrowserSourcePropertyChanged ( DependencyObject _DependencyObject , DependencyPropertyChangedEventArgs _DependencyPropertyChangedEventArgs )\n        {\n            WebBrowser _WebBrowser = _DependencyObject as WebBrowser;\n            if ( _WebBrowser != null )\n            {\n                string URL = _DependencyPropertyChangedEventArgs . NewValue as string;\n                _WebBrowser . Source = URL != null ? new Uri ( URL ) : null;\n            }\n        }\n    }\n</code></pre>\n\n<p><strong>[ C# ]</strong> <em>ConnectionViewModel Class</em> </p>\n\n<pre><code>public class ConnectionViewModel : ViewModelBase\n    {\n            public string Source\n            {\n                get { return Get&lt;string&gt; ( \"Source\" ); }\n                set { Set ( \"Source\" , value ); }\n            }\n\n            public void Execute_ExitCommand ( )\n            {\n                Application . Current . Shutdown ( );\n            }\n\n            public void Execute_LoadedEvent ( )\n            {\n                MessageBox . Show ( \"___Execute_LoadedEvent___\" );\n                Source = ...... ;\n            }\n\n            public void Execute_NavigatedEvent ( )\n            {\n                MessageBox . Show ( \"___Execute_NavigatedEvent___\" );\n            }\n    }\n</code></pre>\n\n<p><strong>[ C# ]</strong> <em>ViewModelBase class</em>  <a href=\"http://viewmodelsupport.codeplex.com/\">Here</a></p>\n\n<p>Finally :<br>\nBinding with commands works well and MessageBoxes shown </p>\n\n<hr>\n\n<p><strong>My Question :</strong><br>\nHow to pass <em>NavigationEventArgs</em> as Command Parameters when Navigated Event occurs ?</p>\n",
      "up_vote_count": 44,
      "answer_count": 10,
      "view_count": 69621,
      "creation_date": 1306950357,
      "owner": {
        "display_name": "Ahmed Ghoneim",
        "profile_image": "https://i.stack.imgur.com/eghMY.jpg?s=128&g=1",
        "reputation": 3254,
        "badge_counts": {
          "gold": 6,
          "silver": 38,
          "bronze": 67,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "browser",
        "expression-blend",
        "eventargs"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Bind datagrid column visibility MVVM",
      "body": "<p>.Net 3.5</p>\n\n<p>I know that the columns doesn't inherit the datacontext and by reading other posts i thought this would work:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>Visibility=\"{Binding RelativeSource={x:Static RelativeSource.Self},\n                     Path=(FrameworkElement.DataContext).IsColumnNameVisible,\n                     Converter={StaticResource boolToVisConverter}}\"\n</code></pre>\n\n<p>However of course it doesn't..\nThe output window does not complain, it seems that the resource i found but the viewmodel property is newer called.</p>\n\n<p>This is the entire DG :</p>\n\n<pre><code>&lt;tk:DataGrid                                        \n            VirtualizingStackPanel.IsVirtualizing=\"False\"                                        \n            Grid.Column=\"0\"\n            AlternationCount=\"2\"\n            AreRowDetailsFrozen=\"True\"\n            AutoGenerateColumns=\"False\"\n            Background=\"Transparent\"\n            BorderThickness=\"0\"\n            CanUserAddRows=\"False\"\n            CanUserReorderColumns=\"True\"\n            CanUserResizeRows=\"False\"\n            GridLinesVisibility=\"None\"\n            ItemsSource=\"{Binding Employees}\"\n            SelectionMode=\"Single\"\n            ColumnHeaderStyle=\"{StaticResource columnHeaderStyle}\"\n            RowHeaderStyle=\"{StaticResource rowHeaderStyle}\"\n            CellStyle=\"{StaticResource cellStyle}\"\n            RowStyle=\"{StaticResource rowStyle}\" \n            ContextMenu=\"{StaticResource columnHeaderContextMenu}\"&gt;\n    &lt;tk:DataGrid.Resources&gt;\n        &lt;ContextMenu x:Key=\"columnHeaderContextMenu\" ItemsSource=\"{Binding ColumnHeaderContextMenuItems}\" /&gt;\n        &lt;Style TargetType=\"{x:Type ScrollBar}\"&gt;\n            &lt;Setter Property=\"Background\" Value=\"Transparent\"/&gt;\n        &lt;/Style&gt;                                    \n        &lt;Style TargetType=\"{x:Type tk:DataGridColumnHeader}\"&gt;\n            &lt;Setter Property=\"Background\" Value=\"Transparent\"/&gt;\n        &lt;/Style&gt;\n    &lt;/tk:DataGrid.Resources&gt;\n    &lt;tk:DataGrid.Triggers&gt;\n        &lt;EventTrigger RoutedEvent=\"tk:DataGridRow.MouseDoubleClick\"&gt;\n            &lt;EventTrigger.Actions&gt;\n                &lt;BeginStoryboard Storyboard=\"{StaticResource showDetailGrid}\"/&gt;\n            &lt;/EventTrigger.Actions&gt;\n        &lt;/EventTrigger&gt;\n    &lt;/tk:DataGrid.Triggers&gt;\n    &lt;tk:DataGrid.Columns&gt;\n        &lt;tk:DataGridTextColumn IsReadOnly=\"True\" Header=\"test\" Binding=\"{Binding Name, Mode=OneWay}\" Visibility=\"{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(FrameworkElement.DataContext).IsColumnNameVisible, Converter={StaticResource boolToVisConverter}}\"  /&gt;\n    &lt;/tk:DataGrid.Columns&gt;\n&lt;/tk:DataGrid&gt;\n</code></pre>\n\n<p>I have read pretty much every single solution to this problem and nothing works..</p>\n",
      "up_vote_count": 44,
      "answer_count": 1,
      "view_count": 26807,
      "creation_date": 1318241535,
      "owner": {
        "display_name": "jrb",
        "profile_image": "https://www.gravatar.com/avatar/48d0d509a05f865a51437f29e14ee614?s=128&d=identicon&r=PG",
        "reputation": 1243,
        "badge_counts": {
          "gold": 1,
          "silver": 10,
          "bronze": 19,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "xaml",
        ".net-3.5",
        "wpftoolkit"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "How to open a new window using MVVM Light Toolkit",
      "body": "<p>I am using MVVM Light toolkit in my WPF application. I would like to know what is the best approach for opening a new window from an existing window. I have got this <code>MainViewModel</code>, which is responsible for <code>MainWindow</code> of my application. Now in the <code>MainView</code>, on a button click, I would like to open a second window on top of it. I have got <code>RelayCommmand</code> binded to the <code>Button</code>'s <code>Command</code>. In the <code>RelayCommand</code>'s method, I can create a new window object and simply call <code>Show()</code>, something like this:</p>\n\n<pre><code>var view2 = new view2()\nview2.Show()\n</code></pre>\n\n<p>but I don't think the ViewModel should be responsible for creating the new <code>view2</code> object. I have read this post <a href=\"https://stackoverflow.com/questions/2761162/wpf-mvvm-get-parent-from-view-model\">WPF MVVM Get Parent from VIEW MODEL</a> where Bugnion has suggested to pass message to the <code>view1</code> from the <code>viewmodel1</code> and then <code>view1</code> should create the new <code>view2</code>. But I am not sure what does he actually mean by passing the message to the <code>view1</code>? How should the <code>view1</code> handle the message? In it's code behind or what?</p>\n\n<p>Regards,\nNabeel</p>\n",
      "up_vote_count": 43,
      "answer_count": 6,
      "view_count": 25867,
      "creation_date": 1280739698,
      "owner": {
        "display_name": "nabeelfarid",
        "profile_image": "https://www.gravatar.com/avatar/2b8e7bbc1686b12814cfb88ad22b7087?s=128&d=identicon&r=PG",
        "reputation": 2516,
        "badge_counts": {
          "gold": 5,
          "silver": 31,
          "bronze": 57,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "mvvm-light"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Which MVVM framework is the best framework for WPF apps",
      "body": "<p>I am a beginner with WPF. Before developing mid and large size project best on WPF, I need to work with open source/free MVVM framework for WPF, so please tell me which MVVM framwork would be the right choice for WPF apps with help of which I can develop very attractive UI for enterprise apps, and which comes with good tutorial and plenty sample code for becoming acquainted with the flow of the framework. Please discuss in detail. Thanks. </p>\n",
      "up_vote_count": 44,
      "answer_count": 3,
      "view_count": 59203,
      "creation_date": 1298313137,
      "owner": {
        "display_name": "Thomas",
        "profile_image": "https://www.gravatar.com/avatar/322fd5def39c5f01ff5f0e9e94fdeb94?s=128&d=identicon&r=PG",
        "reputation": 13381,
        "badge_counts": {
          "gold": 83,
          "silver": 285,
          "bronze": 498,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Keyboard events in a WPF MVVM application?",
      "body": "<p>How can I handle the Keyboard.KeyDown event without using code-behind? We are trying to use the MVVM pattern and avoid writing an event handler in code-behind file.</p>\n",
      "up_vote_count": 42,
      "answer_count": 8,
      "view_count": 62737,
      "creation_date": 1236209159,
      "owner": {
        "display_name": "Carlos",
        "profile_image": "https://www.gravatar.com/avatar/3c74ba1bdfb9e5a1859cd96eb5d6019d?s=128&d=identicon&r=PG",
        "reputation": 446,
        "badge_counts": {
          "gold": 1,
          "silver": 5,
          "bronze": 9,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM Sync Collections",
      "body": "<p>Is there a standardized way to sync a collection of Model objects with a collection of matching ModelView objects in C# and WPF?  I'm looking for some kind of class that would keep the following two collections synced up assuming I only have a few apples and I can keep them all in memory.</p>\n\n<p>Another way to say it, I want to make sure if I add an Apple to the Apples collection I would like to have an AppleModelView added to the AppleModelViews collection.  I could write my own by listening to each collections' CollectionChanged event.  This seems like a common scenario that someone smarter than me has defined \"the right way\" to do it.</p>\n\n<pre><code>public class BasketModel\n{\n    public ObservableCollection&lt;Apple&gt; Apples { get; }\n}\n\npublic class BasketModelView\n{\n    public ObservableCollection&lt;AppleModelView&gt; AppleModelViews { get; }\n}\n</code></pre>\n",
      "up_vote_count": 42,
      "answer_count": 10,
      "view_count": 13279,
      "creation_date": 1249933212,
      "owner": {
        "display_name": "Jake Pearson",
        "profile_image": "https://www.gravatar.com/avatar/1c88a3c1e8226ad98fc43b4838a0c387?s=128&d=identicon&r=PG",
        "reputation": 15770,
        "badge_counts": {
          "gold": 7,
          "silver": 54,
          "bronze": 85,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM Light: how to unregister Messenger",
      "body": "<p>I love the MVVM Light's Messenger and its flexibility, however I'm experiencing memory leaks when I forget to explicitly unregister the recipients (in Silverlight 4).</p>\n\n<p>The cause is explained <a href=\"http://mvvmlight.codeplex.com/discussions/235068\">here</a>, but I'm fine with it as I believe it's a good practice to explicitly unregister the recipients anyways rather than relying on the Messenger's use of weak references. The problem is that is easier said than done.</p>\n\n<ul>\n<li><p><strong>ViewModels</strong> are easy: you usually have full control over their lifecycle and can just <code>Cleanup()</code> them when they are not needed anymore.</p></li>\n<li><p><strong>Views</strong> on the other hand are trickier because they are instantiated and destroyed via DataTemplates. For ex. you can think of an <code>ItemsControl</code> with <code>MyView</code> as DataTemplate, bound to an <code>ObservableCollection&lt;MyViewModel&gt;</code>. The <code>MyView</code> controls are created/collected by the binding engine and you have no good way to manually call Cleanup() on them.</p></li>\n</ul>\n\n<p>I have a solution in mind but would like to know if it's a decent pattern or there are better alternatives.\nThe idea is to send a specific message from the ViewModel to tell the associated View(s) to dispose:</p>\n\n<pre><code>public class MyViewModel : ViewModelBase\n{\n    ...\n\n    public override void Cleanup()\n    {\n        // unregisters its own messages, so that we risk no leak\n        Messenger.Default.Unregister&lt;...&gt;(this);\n\n        // sends a message telling that this ViewModel is being cleaned\n        Messenger.Default.Send(new ViewModelDisposingMessage(this));\n\n        base.Cleanup();\n    }\n}\n\npublic class MyView : UserControl, ICleanup\n{\n    public MyView()\n    {\n         // registers to messages it actually needs\n         Messenger.Default.Register&lt;...&gt;(this, DoSomething);\n\n         // registers to the ViewModelDisposing message\n         Messenger.Default.Register&lt;ViewModelDisposingMessage&gt;(this, m =&gt;\n             {\n                 if (m.SenderViewModel == this.DataContext)\n                     this.Cleanup();\n             });\n    }\n\n    public void Cleanup()\n    {\n        Messenger.Default.Unregister&lt;...&gt;(this);\n        Messenger.Default.Unregister&lt;ViewModelDisposingMessage&gt;(this);\n    }\n}\n</code></pre>\n\n<p>So when you call Cleanup() on a viewModel all the views that use it as DataContext will exeute their local Cleanup() as well.</p>\n\n<p>What do you think? Am I missing something obvious?</p>\n",
      "up_vote_count": 42,
      "answer_count": 3,
      "view_count": 10566,
      "creation_date": 1299744734,
      "owner": {
        "display_name": "Francesco De Vittori",
        "profile_image": "https://www.gravatar.com/avatar/4ec749e46aef9fcecd662b9c378da060?s=128&d=identicon&r=PG",
        "reputation": 6567,
        "badge_counts": {
          "gold": 5,
          "silver": 23,
          "bronze": 39,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "silverlight",
        "mvvm",
        "silverlight-4.0",
        "mvvm-light"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Should I use the Model-View-ViewModel (MVVM) pattern in Silverlight projects?",
      "body": "<p>One challenge with Silverlight controls is that when properties are bound to code, they're no longer really editable in Blend. For example, if you've got a ListView that's populated from a data feed, there are no elements visible when you edit the control in Blend.</p>\n\n<p>I've heard that the MVVM pattern, originated by the WPF development community, can also help with keeping Silverlight controls \"blendable\". I'm still wrapping my head around it, but here are some explanations:</p>\n\n<ul>\n<li><a href=\"http://www.nikhilk.net/Silverlight-ViewModel-Pattern.aspx\" rel=\"noreferrer\">http://www.nikhilk.net/Silverlight-ViewModel-Pattern.aspx</a></li>\n<li><a href=\"http://mark-dot-net.blogspot.com/2008/11/model-view-view-model-mvvm-in.html\" rel=\"noreferrer\">http://mark-dot-net.blogspot.com/2008/11/model-view-view-model-mvvm-in.html</a></li>\n<li><a href=\"http://www.ryankeeter.com/silverlight/silverlight-mvvm-pt-1-hello-world-style/\" rel=\"noreferrer\">http://www.ryankeeter.com/silverlight/silverlight-mvvm-pt-1-hello-world-style/</a></li>\n<li><a href=\"http://jonas.follesoe.no/YouCardRevisitedImplementingTheViewModelPattern.aspx\" rel=\"noreferrer\">http://jonas.follesoe.no/YouCardRevisitedImplementingTheViewModelPattern.aspx</a> </li>\n</ul>\n\n<p>One potential downside is that the pattern requires additional classes, although not necessarily more code (as shown by the second link above). Thoughts?</p>\n",
      "up_vote_count": 41,
      "answer_count": 12,
      "view_count": 21790,
      "creation_date": 1229534250,
      "owner": {
        "display_name": "Jon Galloway",
        "profile_image": "https://www.gravatar.com/avatar/1c494896dd56e0e27253156c28f1dfb9?s=128&d=identicon&r=PG",
        "reputation": 37882,
        "badge_counts": {
          "gold": 20,
          "silver": 108,
          "bronze": 189,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "silverlight",
        "design-patterns",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Benefits of MVVM over MVC",
      "body": "<p>Finally getting to do some Silverlight development and I came across MVVM. I am familiar with MVC and the article I was reading said because of XAML, MVC would not work out. Not having too much experience in XAML clearly is the reason I did not get this point.</p>\n\n<p>Can someone explain why MVC is not suited and why MVVM is better for Silverlight development?</p>\n\n<p>Thanks\nJD</p>\n",
      "up_vote_count": 41,
      "answer_count": 5,
      "view_count": 19395,
      "creation_date": 1256038378,
      "owner": {
        "display_name": "JD.",
        "profile_image": "https://www.gravatar.com/avatar/2ced2fe8c08b01269097f35619375e0d?s=128&d=identicon&r=PG",
        "reputation": 5989,
        "badge_counts": {
          "gold": 11,
          "silver": 58,
          "bronze": 116,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "silverlight"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF-MVVM: Setting UI control focus from ViewModel",
      "body": "<p>What is a good practice of setting control focus in MVVM architecture. </p>\n\n<p>The way I envision it, is with a property on the ViewModel that would trigger a focus change when needed. And than have the UI controls bind/listen to that property so that if it changes, appropriate focus will be set. </p>\n\n<p>I see it as a ViewModel thing, because i want to set focus appropriate after a certain action was performed by the ViewModel, such as loading certain data. </p>\n\n<p>What's the best practice? </p>\n",
      "up_vote_count": 41,
      "answer_count": 5,
      "view_count": 48501,
      "creation_date": 1300372739,
      "owner": {
        "display_name": "Sonic Soul",
        "profile_image": "https://www.gravatar.com/avatar/c20ebb414558d39382020afb2297dbfc?s=128&d=identicon&r=PG",
        "reputation": 9460,
        "badge_counts": {
          "gold": 26,
          "silver": 91,
          "bronze": 164,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "wpf",
        "mvvm",
        "focus"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVC / MVP / MVVM What the Heck?",
      "body": "<p>I recently worked on a .Net WPF project to build a retail point of sale system where I used the MVP pattern for the first time. It took me a little while to wrap my head around the change of approach but once I did that I thought that the concept rocked!</p>\n\n<p>My question is this: what is the distinction between MVC, MVP and MVVM? If there is a clear distinction, are there guidelines as to when you should use one pattern over another?</p>\n\n<p>If anyone can offer guidance on this, or point to article that explains the differences I'd very much appreciate it.</p>\n",
      "up_vote_count": 40,
      "answer_count": 2,
      "view_count": 14997,
      "creation_date": 1250669218,
      "owner": {
        "display_name": "Steve",
        "profile_image": "https://www.gravatar.com/avatar/25df92393439fd12d58eecbe0dbe1df7?s=128&d=identicon&r=PG",
        "reputation": 1195,
        "badge_counts": {
          "gold": 4,
          "silver": 18,
          "bronze": 37,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "model-view-controller",
        "design-patterns",
        "mvvm",
        "mvp"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM: Binding to ListBox.SelectedItem?",
      "body": "<p>How do I bind a view model property to the ListBox.SelectedItem property?</p>\n\n<p>I have created a simple MVVM demo to try to figure this one out. My view model has these properties:</p>\n\n<pre><code>private ObservableCollection&lt;DisneyCharacter&gt; p_DisneyCharacters;\npublic ObservableCollection&lt;DisneyCharacter&gt; DisneyCharacters\n{\n    get { return p_DisneyCharacters; }\n\n    set\n    {\n        p_DisneyCharacters = value;\n        base.FirePropertyChangedEvent(\"DisneyCharacters\");\n    }\n}\n\nprivate DisneyCharacter p_SelectedItem;\npublic DisneyCharacter SelectedItem\n{\n    get { return p_SelectedItem; }\n\n    set\n    {\n        p_SelectedItem = value;\n        base.FirePropertyChangedEvent(\"SelectedItem\");\n    }\n}\n</code></pre>\n\n<p>I want to bind the SelectedItem property to the item selected in the list box. Here is the XAML for the list box:</p>\n\n<pre><code>&lt;ListBox ItemTemplate=\"{StaticResource MasterTemplate}\"\n         ItemsSource=\"{Binding Path=DisneyCharacters}\" \n         SelectedItem=\"{Binding Path=Selectedtem, Mode=TwoWay}\" \n         HorizontalAlignment=\"Stretch\" /&gt;\n</code></pre>\n\n<p>Here is my problem: The view model SelectedItem property isn't being updated when I change the selection in the list box.</p>\n\n<p>I did a test where I temporarily replaced the view model SelectedItem property with a SelectedIndex property, and I bound that to the ListBox.SelectedIndex property. That property updated fine--it's just the SelectedItem property that I can't get to work.</p>\n\n<p>So, how do I fix the SelectedItem binding? Thanks for your help.</p>\n",
      "up_vote_count": 40,
      "answer_count": 1,
      "view_count": 37480,
      "creation_date": 1252188415,
      "owner": {
        "display_name": "David Veeneman",
        "profile_image": "https://www.gravatar.com/avatar/47795e25607ada410037c3b57a4a7434?s=128&d=identicon&r=PG",
        "reputation": 10428,
        "badge_counts": {
          "gold": 24,
          "silver": 103,
          "bronze": 171,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "data-binding",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Open File Dialog MVVM",
      "body": "<p>Ok I really would like to know how expert MVVM developers handle an openfile dialog in WPF.</p>\n\n<p>I don't really want to do this in my ViewModel(where 'Browse' is referenced via a DelegateCommand)</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>void Browse(object param)\n{\n    //Add code here\n    OpenFileDialog d = new OpenFileDialog();\n\n    if (d.ShowDialog() == true)\n    {\n        //Do stuff\n    }\n}\n</code></pre>\n\n<p>Because I believe that goes against MVVM methodology.</p>\n\n<p>What do I do?</p>\n",
      "up_vote_count": 39,
      "answer_count": 6,
      "view_count": 34566,
      "creation_date": 1245936409,
      "owner": {
        "display_name": "Jose",
        "profile_image": "https://www.gravatar.com/avatar/c11f31e3d850c276ea8bd830ac051eab?s=128&d=identicon&r=PG",
        "reputation": 5726,
        "badge_counts": {
          "gold": 18,
          "silver": 52,
          "bronze": 79,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "openfiledialog"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF ICommand MVVM implementation",
      "body": "<p>So in this particular MVVM implementation I'm doing, I need several commands. I really got tired of implementing the ICommand classes one by one, so I came up with a solution, but I don't know how good it is, so the input of any WPF expert here will be greatly appreciated. And if you could provide a better solution, even better!</p>\n\n<p>What I did is a single ICommand class and two delegates which take an object as a parameter, one delegate is void (for OnExecute), the other bool (for OnCanExecute). So in the constructor of my ICommand (which is called by the ViewModel class) I send the two methods, and on each ICommand method I invoke the delegates' methods.</p>\n\n<p>It works really good, but I'm not sure if this is a bad way to do it, or if there's a better way. Below is the complete code, any input will be greatly appreciated, even negative, but please be constructive.</p>\n\n<p>Thanks!!</p>\n\n<p>ViewModel:</p>\n\n<pre><code>public class TestViewModel : DependencyObject\n{\n    public ICommand Command1 { get; set; }\n    public ICommand Command2 { get; set; }\n    public ICommand Command3 { get; set; }\n\n    public TestViewModel()\n    {\n        this.Command1 = new TestCommand(ExecuteCommand1, CanExecuteCommand1);\n        this.Command2 = new TestCommand(ExecuteCommand2, CanExecuteCommand2);\n        this.Command3 = new TestCommand(ExecuteCommand3, CanExecuteCommand3);\n    }\n\n    public bool CanExecuteCommand1(object parameter)\n    {\n        return true;\n    }\n\n    public void ExecuteCommand1(object parameter)\n    {\n        MessageBox.Show(\"Executing command 1\");\n    }\n\n    public bool CanExecuteCommand2(object parameter)\n    {\n        return true;\n    }\n\n    public void ExecuteCommand2(object parameter)\n    {\n        MessageBox.Show(\"Executing command 2\");\n    }\n\n    public bool CanExecuteCommand3(object parameter)\n    {\n        return true;\n    }\n\n    public void ExecuteCommand3(object parameter)\n    {\n        MessageBox.Show(\"Executing command 3\");\n    }\n}\n</code></pre>\n\n<p>ICommand:</p>\n\n<pre><code>public class TestCommand : ICommand\n{\n    public delegate void ICommandOnExecute(object parameter);\n    public delegate bool ICommandOnCanExecute(object parameter);\n\n    private ICommandOnExecute _execute;\n    private ICommandOnCanExecute _canExecute;\n\n    public TestCommand(ICommandOnExecute onExecuteMethod, ICommandOnCanExecute onCanExecuteMethod)\n    {\n        _execute = onExecuteMethod;\n        _canExecute = onCanExecuteMethod;\n    }\n\n    #region ICommand Members\n\n    public event EventHandler CanExecuteChanged\n    {\n        add { CommandManager.RequerySuggested += value; }\n        remove { CommandManager.RequerySuggested -= value; }\n    }\n\n    public bool CanExecute(object parameter)\n    {\n        return _canExecute.Invoke(parameter);\n    }\n\n    public void Execute(object parameter)\n    {\n        _execute.Invoke(parameter);\n    }\n\n    #endregion\n}\n</code></pre>\n",
      "up_vote_count": 39,
      "answer_count": 4,
      "view_count": 92819,
      "creation_date": 1253743738,
      "owner": {
        "display_name": "Carlo",
        "profile_image": "https://www.gravatar.com/avatar/7047d95f5bd0c0a07ce4e0847e50882a?s=128&d=identicon&r=PG",
        "reputation": 14288,
        "badge_counts": {
          "gold": 25,
          "silver": 104,
          "bronze": 162,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "wpf",
        "mvvm",
        "icommand"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM Light + Unity or Prism?",
      "body": "<p>I am a little out-of-date in WPF right now and would be interested to hear peoples opinions on the latest version of Prism (which I used a couple of versions ago) vs an MVVM Light + Unity approach (which I have never done - decent examples URLs would be good).</p>\n\n<p>My project will be a large one comprising multiple modules written by several developers. There is also the funds to bring in a 3rd party control suite in order to set up a nice workspace using one of the fancy Docking/Workspace layout managers out there (and I know some play better with the Prism regions than others).</p>\n\n<p>If you were starting a project from scratch right now, what would you go with and why?\nDetails on specific recommended architecture patterns would be useful (e.g. auto discovery of module dlls? Injecting logging service?).\nBasically, any thoughts and advice would be good. I'd like to get a good discussion going. Perhaps there is another direction entirely that you would suggest going in? I'm very much in the research phase and would like as much input as possible.</p>\n\n<p>I put this on here because I thought it would get less biased points of view than the Prism/MVVM Light forums but, if there is a more suitable place for this question, please point me in that direction.</p>\n",
      "up_vote_count": 39,
      "answer_count": 1,
      "view_count": 16988,
      "creation_date": 1295543397,
      "owner": {
        "display_name": "David",
        "profile_image": "https://www.gravatar.com/avatar/acd505aa30bdfdae63482b129bde4b46?s=128&d=identicon&r=PG",
        "reputation": 312,
        "badge_counts": {
          "gold": 1,
          "silver": 6,
          "bronze": 15,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "unity-container",
        "prism",
        "mvvm-light"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM Light RelayCommand Parameters",
      "body": "<p>I'm having an issue with passing a parameter to a relaycommand using the GalaSoft MVVM Light framework.  I know that mvvm light's implementation of relaycommand doesn't use lambda parameters, so I did some research and found a way that people worked around it by doing something like this:</p>\n\n<pre><code>public RelayCommand ProjMenuItem_Edit\n{\n    get\n    {\n        if (_projmenuItem_Edit == null)\n        {\n            //This should work....\n            _projmenuItem_Edit = new RelayCommand(ProjEditNode);\n        }\n        return _projmenuItem_Edit;\n    }\n}\n\nprivate void ProjEditNode(object newText)\n{\n    var str = newText as string;\n    OrganLocationViewModel sel = \n        ProjectOrganLocationView.GetExtendedTreeView().GetTopNode();\n\n    //Console.WriteLine(sel.OrganDisplayName);\n    sel.OrganDisplayName = str;\n}\n</code></pre>\n\n<p>However, I keep getting an error on the line <code>_projmenuItem_Edit = new RelayCommand(ProjEditNode);</code> that says <code>Argument 1: cannot convert from 'method group' to 'System.Action'</code></p>\n\n<p>What am I missing? </p>\n",
      "up_vote_count": 39,
      "answer_count": 3,
      "view_count": 46273,
      "creation_date": 1300107742,
      "owner": {
        "display_name": "Saggio",
        "profile_image": "https://www.gravatar.com/avatar/ac0e3c41f2122cbedc05f092f56500d0?s=128&d=identicon&r=PG",
        "reputation": 1329,
        "badge_counts": {
          "gold": 5,
          "silver": 22,
          "bronze": 45,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm-light",
        "relaycommand"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Why to avoid the codebehind in WPF MVVM pattern?",
      "body": "<p>At the article, <a href=\"http://msdn.microsoft.com/en-us/magazine/dd419663.aspx\" rel=\"noreferrer\">WPF Apps With The Model-View-ViewModel Design Pattern</a>, the author who is Josh Smith said:</p>\n\n<blockquote>\n  <p>(1) In a well-designed MVVM architecture, the codebehind for most Views should be empty, or, at most, only contain code that manipulates the controls and resources contained within that view. (2) Sometimes it is also necessary to write code in a View's codebehind that interacts with a ViewModel object, such as hooking an event or calling a method that would otherwise be very difficult to invoke from the ViewModel itself.</p>\n</blockquote>\n\n<p><s>My question is ,at the (1), why the empty codebehind is regarded as a a well-designed MVVM.</s>(It sounds that the empty codebehind is always good.)</p>\n\n<p><strong>EDIT: My question is, as the following, why the approach like the <code>AttachedCommandBehavior</code> or the <code>InvokeCommandAction</code> is tried to avoid the codebehind coding.</strong></p>\n\n<p>Let me explain more detail.</p>\n\n<p>As far as the (1) is concerned, I would think like the following situation as from the <a href=\"http://marlongrech.wordpress.com/2008/12/13/attachedcommandbehavior-v2-aka-acb/\" rel=\"noreferrer\">AttachedCommandBehavior</a>. As the Border doesn't implement the <code>ICommandSource</code> for the <code>MouseRightButtonDown</code>, you cannot commonly bind the event and the <code>ICommand</code>, but can do with the <a href=\"http://marlongrech.wordpress.com/2008/12/13/attachedcommandbehavior-v2-aka-acb/\" rel=\"noreferrer\">AttachedCommandBehavior</a>.</p>\n\n<pre><code>&lt;!-- I modified some code from the AttachedCommandBehavior to show more simply --&gt;\n&lt;Border&gt;\n    &lt;local:CommandBehaviorCollection.Behaviors&gt;\n           &lt;local:BehaviorBinding Event=\"MouseRightButtonDown\" \n                  Command=\"{Binding SomeCommand}\" \n                  CommandParameter=\"A Command on MouseRightButtonDown\"/&gt;\n    &lt;/local:CommandBehaviorCollection.Behaviors&gt;\n&lt;/Border&gt;\n</code></pre>\n\n<p><strong>OR</strong></p>\n\n<p>We can do this with the <code>System.Windows.Interactivity.InvokeCommandAction</code>.</p>\n\n<pre><code>&lt;Border xmlns:i=\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\" &gt;\n    &lt;i:Interaction.Triggers&gt;\n        &lt;i:EventTrigger EventName=\"MouseRightButtonDown\"&gt;\n            &lt;i:InvokeCommandAction Command=\"{Binding SomeCommand}\" \n               CommandParameter=\"A Command on MouseRightButtonDown\"/&gt;\n        &lt;/i:EventTrigger&gt;\n    &lt;/i:Interaction.Triggers&gt;\n&lt;/Border&gt;\n</code></pre>\n\n<p><strong>BUT,</strong></p>\n\n<p>We use the following XAML and its codebehind having the <code>Border_MouseRightButtonDown</code> method, which is linked to the (2) Josh Simth said above.</p>\n\n<pre><code>&lt;Border MouseRightButtonDown =\"Border_MouseRightButtonDown\"/&gt;\n</code></pre>\n\n<p>I think using the codebehind as above is not bad just because the difference between these is only where binding a command or add event handler is.</p>\n\n<p>What do you think about this?</p>\n",
      "up_vote_count": 39,
      "answer_count": 4,
      "view_count": 20656,
      "creation_date": 1308638583,
      "owner": {
        "display_name": "Jin-Wook Chung",
        "profile_image": "https://www.gravatar.com/avatar/6b54b7199b7b7cba792be948a863a196?s=128&d=identicon&r=PG",
        "reputation": 2949,
        "badge_counts": {
          "gold": 1,
          "silver": 18,
          "bronze": 35,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "xaml",
        "mvvm",
        "code-behind"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF Navigate through views using MVVM pattern",
      "body": "<p>I'm building my first WPF using MVVM pattern. With the help of this community, I manage to create my Model, my first ViewModel and view. Now I want to add some complexity to the app designing the basic application layout interface. My idea is to have at least 2 child views and one main view and separate them on several XAML:</p>\n\n<blockquote>\n  <ul>\n  <li>Main.XAML</li>\n  <li>Products.XAML</li>\n  <li>Clients.XAML</li>\n  </ul>\n</blockquote>\n\n<p>Main will have a menu and a space to load child views (Products and Clients). Now following MVVM pattern all the navigation logic between views should be write on a ViewModel. So mi idea is to have 4 ViewModels:</p>\n\n<blockquote>\n  <ul>\n  <li>MainViewModel</li>\n  <li>ProductsViewModel</li>\n  <li>ClientsViewModel</li>\n  <li>NavigationViewModel </li>\n  </ul>\n</blockquote>\n\n<p>So NavigationViewModel should contain a collection of child viewmodels? and an active viewmodel is that right?</p>\n\n<p>So my questions are:</p>\n\n<p>1) How can I load different views (Products, Clients) on Main view using MVVM pattern?</p>\n\n<p>2) How do I implement navigation viewModel?</p>\n\n<p>3) How can I control the max number of open or active views?</p>\n\n<p>4) How can I switch between open views?</p>\n\n<p>I have been doing a lot of search and reading and couldn't find any simple working example of MVVM navigation with WPF that loads multiple views inside a main view. Many of then:</p>\n\n<p>1) Use external toolkit, which I don't want to use right now.</p>\n\n<p>2) Put all the code for creating all the views in a single XAML file, which doesn't seems like a good idea because I need to implement near 80 views!</p>\n\n<p>I'm in the right path here? Any help, especially with some code will be appreciated.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>So, I build a test project following @LordTakkera advices, but get stuck. This is how my solution looks like:\n<img src=\"https://i.stack.imgur.com/ZJl3q.jpg\" alt=\"Solution\"></p>\n\n<p>I create:</p>\n\n<blockquote>\n  <ul>\n  <li><p>Two Models (Clients and Products)</p></li>\n  <li><p>One MainWindow and two wpf user controls(Clients and Products) XAML.</p></li>\n  <li><p>Three ViewModels (Clients, Products and Main ViewModel)</p></li>\n  </ul>\n</blockquote>\n\n<p>Then I set dataContext on each view to corresponding viewModel. After that I create MainWindow with the ContentPresenter like this and bind it to a property of the viewmodel.</p>\n\n<p><strong>MainWindow.XAML</strong></p>\n\n<pre><code>&lt;Window x:Class=\"PruevaMVVMNavNew.MainWindow\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    Title=\"MainWindow\" Height=\"519\" Width=\"890\"&gt;    \n&lt;Grid&gt;\n    &lt;Grid.ColumnDefinitions&gt;\n        &lt;ColumnDefinition Width=\"150\"/&gt;\n        &lt;ColumnDefinition Width=\"*\"/&gt;\n    &lt;/Grid.ColumnDefinitions&gt;\n    &lt;Grid.RowDefinitions&gt;\n        &lt;RowDefinition Height=\"80\"/&gt;\n        &lt;RowDefinition Height=\"*\"/&gt;\n        &lt;RowDefinition Height=\"20\"/&gt;\n    &lt;/Grid.RowDefinitions&gt;        \n    &lt;Border Grid.Column=\"0\" Grid.ColumnSpan=\"2\" Background=\"AntiqueWhite\" &gt;&lt;/Border&gt;\n    &lt;Border Grid.Row=\"1\" Grid.RowSpan=\"2\" Background=\"AliceBlue\"&gt;&lt;/Border&gt;\n    &lt;Border Grid.Row=\"1\" Grid.Column=\"1\" Background=\"CadetBlue\"&gt;&lt;/Border&gt;                \n    &lt;ContentPresenter Grid.Row=\"1\" Grid.Column=\"1\" x:Name=\"ContentArea\" Content=\"{Binding CurrentView}\"/&gt;        \n    &lt;StackPanel Margin=\"5\" Grid.Column=\"0\" Grid.Row=\"1\"&gt;            \n        &lt;Button&gt;Clients&lt;/Button&gt;\n        &lt;Button&gt;Products&lt;/Button&gt;\n    &lt;/StackPanel&gt;\n&lt;/Grid&gt;\n</code></pre>\n\n<p></p>\n\n<p>And also this is viewmodel from MainWindow:</p>\n\n<pre><code>class Main_ViewModel : BaseViewModel\n    {\n        public Main_ViewModel()\n        {\n            CurrentView = new Clients();\n        }\n\n        private UserControl _currentView;\n        public UserControl CurrentView\n        {\n            get\n            {\n                return _currentView;\n            }\n            set\n            {\n                if (value != _currentView)\n                {\n                    _currentView = value;\n                    OnPropertyChanged(\"CurrentView\");\n                }\n            }\n        }\n\n    }\n</code></pre>\n\n<p>So this load by default clients view and looks like this (which is just right!):</p>\n\n<p><img src=\"https://i.stack.imgur.com/YsR3i.jpg\" alt=\"Current state\"></p>\n\n<p>So I suppose I need a way to relate the buttons on the left, with a certain viemodel and then bind them with CurrentView Property of Main viewModel. How can I do that?</p>\n\n<p><strong>UPDATE2</strong></p>\n\n<p>According to @LordTakkera advice I modify my main viewModel this way:</p>\n\n<pre><code>class Main_ViewModel : BaseViewModel\n    {\n        public ICommand SwitchViewsCommand { get; private set; }\n\n        public Main_ViewModel()\n        {\n            //CurrentView = new Clients();\n            SwitchViewsCommand = new RelayCommand((parameter) =&gt; CurrentView = (UserControl)Activator.CreateInstance(parameter as Type));\n        }\n\n        private UserControl _currentView;\n        public UserControl CurrentView\n        {\n            get\n            {\n                return _currentView;\n            }\n            set\n            {\n                if (value != _currentView)\n                {\n                    _currentView = value;\n                    OnPropertyChanged(\"CurrentView\");\n                }\n            }\n        }\n    }\n</code></pre>\n\n<p>I use RelayCommand instead of DelegateCommand but I think it works the same way. The command is executed when I hit the buttons and the type parameter string its ok but i get this error:</p>\n\n<p><img src=\"https://i.stack.imgur.com/RtVXY.jpg\" alt=\"Error\"></p>\n\n<p>Translation: <strong>Value cannot be null. Parameter name: type. Suggestion use New keyword to create object instance</strong>\nI don't know where to put the New keyword. I have try on CommandParameter but it wont work. Any idea? Thanks</p>\n\n<p><strong>UPDATE 3</strong></p>\n\n<p>After all the advices and help received here, and a lot of work, here is my final navigation menu and the base for my application interface. </p>\n\n<p><img src=\"https://i.stack.imgur.com/Wv7n3.jpg\" alt=\"Capture 1\">\n<img src=\"https://i.stack.imgur.com/KJYiL.jpg\" alt=\"Capture 2\"></p>\n",
      "up_vote_count": 39,
      "answer_count": 2,
      "view_count": 26887,
      "creation_date": 1396374494,
      "owner": {
        "display_name": "ericpap",
        "profile_image": "https://www.gravatar.com/avatar/784464f537c84d21930c129e975f0b53?s=128&d=identicon&r=PG",
        "reputation": 1968,
        "badge_counts": {
          "gold": 4,
          "silver": 16,
          "bronze": 29,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "xaml",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM radiobuttons",
      "body": "<p>Someone please help. I have an interesting issue. I am trying to implement an MVVM app and I want to bind to radiobuttons in my view. </p>\n\n<p>Here's my view:</p>\n\n<pre><code>&lt;StackPanel Orientation=\"Horizontal\" Grid.ColumnSpan=\"2\"  &gt;\n    &lt;RadioButton GroupName=\"1\" IsChecked=\"{Binding Path=NoteGeneral, Mode=TwoWay}\"&gt;General&lt;/RadioButton&gt;\n    &lt;RadioButton GroupName=\"1\" IsChecked=\"{Binding Path=NoteContact, Mode=TwoWay}\" &gt;Contact&lt;/RadioButton&gt;\n    &lt;RadioButton GroupName=\"1\" IsChecked=\"{Binding Path=NoteAddress, Mode=TwoWay}\" &gt;Address&lt;/RadioButton&gt;\n    &lt;RadioButton GroupName=\"1\" IsChecked=\"{Binding Path=NotePhone, Mode=TwoWay}\" &gt;Phone&lt;/RadioButton&gt;\n&lt;/StackPanel&gt;\n</code></pre>\n\n<p>Here's my ViewModel:</p>\n\n<pre><code>    bool _NoteGeneral;\n    public bool NoteGeneral\n    {\n        get { return _NoteGeneral; }\n        set\n        {\n            _NoteGeneral = value;\n            OnPropertyChanged(\"NoteGeneral\");\n        }\n    }\n\n    bool _NoteContact;\n    public bool NoteContact\n    {\n        get { return _NoteContact; }\n        set\n        {\n            _NoteContact = value;\n            OnPropertyChanged(\"NoteContact\");\n        }\n    }\n\n    bool _NoteAddress;\n    public bool NoteAddress\n    {\n        get { return _NoteAddress; }\n        set\n        {\n            _NoteAddress = value;\n            OnPropertyChanged(\"NoteAddress\");\n        }\n    }\n\n    bool _NotePhone;\n    public bool NotePhone\n    {\n        get { return _NotePhone; }\n        set\n        {\n            _NotePhone = value;\n            OnPropertyChanged(\"NotePhone\");\n        }\n    }\n</code></pre>\n\n<p>The problem is this, when I click the different radiobuttons the property setter only gets called the first time(when i run thru debugging). e.g. When I click NoteGeneral, NoteContact, then NoteGeneral again only the first two clicks update my viewmodel. I think I might have something wrong with my binding, or maybe I'm approaching this the completely wrong way. </p>\n\n<p>Can anyone help?</p>\n\n<p>How should I implement radiobutton selections in my viewmodel?</p>\n\n<h2>.NET 4 and Later</h2>\n\n<p>This issue with RadioButton binding was resolved by Microsoft when .NET 4 was released.  Binding of RadioButtons now works as you would expect without any of the work-arounds listed below.</p>\n",
      "up_vote_count": 39,
      "answer_count": 4,
      "view_count": 36750,
      "creation_date": 1242744561,
      "owner": {
        "display_name": "Jose",
        "profile_image": "https://www.gravatar.com/avatar/c11f31e3d850c276ea8bd830ac051eab?s=128&d=identicon&r=PG",
        "reputation": 5726,
        "badge_counts": {
          "gold": 18,
          "silver": 52,
          "bronze": 79,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "data-binding",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Does MVVM violate DRY?",
      "body": "<p>It seems that ViewModels that I make look <em>suspiciously like other classes</em> and they seem to require a lot of code repetition, e.g. in a current project I have:</p>\n\n<ul>\n<li><strong>SmartForm</strong>: <em>Model</em> that represents a data form to fill in, has properties:\n\n<ul>\n<li>IdCode</li>\n<li>Title</li>\n<li>Description</li>\n<li>collection of SmartFormFields</li>\n<li>etc.</li>\n</ul></li>\n<li><strong>SmartFormControlView</strong> <em>View</em></li>\n<li><strong>SmartFormControlViewModel</strong> <em>ViewModel</em>\n\n<ul>\n<li>IdCode</li>\n<li>Title</li>\n<li>Description</li>\n<li>collection of SmartFormFields</li>\n<li>etc.</li>\n</ul></li>\n</ul>\n\n<p>So my <strong>ViewModel is basically the same as my Model</strong>, just with all the OnPropertyChanged features for binding with the View.</p>\n\n<p>It seems as I refactor and extend this that every little change I make to my model, I <strong>have to make a</strong> <strong>mirror change to the ViewModel</strong>.</p>\n\n<p>This seems to violate a basic rule of patterns <em>Don't Repeat Yourself</em>. </p>\n\n<p><strong>Am I implementing the MVVM pattern incorrectly or is it just an inherent characteristic of MVVM that there is always a 1-to-1 repetition going on between Model and ViewModel?</strong></p>\n",
      "up_vote_count": 38,
      "answer_count": 8,
      "view_count": 2050,
      "creation_date": 1244449017,
      "owner": {
        "display_name": "Edward Tanguay",
        "profile_image": "https://www.gravatar.com/avatar/a9eaafb332f36840447f60dd85b94d19?s=128&d=identicon&r=PG",
        "reputation": 72716,
        "badge_counts": {
          "gold": 256,
          "silver": 619,
          "bronze": 943,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "design-patterns",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "How have you successfully implemented MessageBox.Show() functionality in MVVM?",
      "body": "<p>I've got a WPF application <strong>which calls MessageBox.Show() way back in the ViewModel</strong> (to check if the user really wants to delete). <em>This actually works</em>, but <strong>goes against the grain of MVVM</strong> since the ViewModel should not explicitly determine what happens on the View.</p>\n\n<p>So now I am thinking <strong>how can I best implement the MessageBox.Show() functionality</strong> in my MVVM application, options:</p>\n\n<ol>\n<li><p>I could have a message with the text \"Are you sure...?\" along with two buttons Yes and No all in a Border in my XAML, and create a trigger on the template so that it is collapsed/visible based on a ViewModelProperty called <strong>AreYourSureDialogueBoxIsVisible</strong>, and then when I need this dialogue box, assign AreYourSureDialogueBoxIsVisible to \"true\", and also handle the two buttons via DelegateCommand back in my ViewModel.</p></li>\n<li><p>I could also somehow try to handle this with triggers in XAML so that the Delete button actually just makes some Border element appear with the message and buttons in it, and the Yes button did the actually deleting. </p></li>\n</ol>\n\n<p><strong>Both solutions seem to be too complex</strong> for what used to be a couple lines of code with MessageBox.Show().</p>\n\n<p><strong>In what ways have you successfully implemented Dialogue Boxes in your MVVM applications?</strong></p>\n",
      "up_vote_count": 38,
      "answer_count": 11,
      "view_count": 20114,
      "creation_date": 1247059152,
      "owner": {
        "display_name": "Edward Tanguay",
        "profile_image": "https://www.gravatar.com/avatar/a9eaafb332f36840447f60dd85b94d19?s=128&d=identicon&r=PG",
        "reputation": 72716,
        "badge_counts": {
          "gold": 256,
          "silver": 619,
          "bronze": 943,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "triggers",
        "messagebox"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM and collections of VMs",
      "body": "<p>A common senario: A model with a collection of item models.<br>\nE.g a House with a collection of People.</p>\n\n<p><strong>How to structure this correctly for MVVM - particulary with regard to updating the Model and ViewModel collections with additions and deletes?</strong></p>\n\n<p>Model <code>House</code> contains a collection of model <code>People</code> (normally a <code>List&lt;People&gt;</code>).<br>\nView model <code>HouseVM</code> contains the House object that it wraps and an ObservableCollection of view model <code>PeopleVM</code> (<code>ObservableCollection&lt;PeopleVM&gt;</code>).  Note that we end up here with the HouseVM holding two collections (that require syncing):<br>\n1. <code>HouseVM.House.List&lt;People&gt;</code><br>\n2. <code>HouseVM.ObservableCollection&lt;PeopleVM&gt;</code></p>\n\n<p>When the House is updated with new People (add) or People leave (remove) that event must now be handled in both collections the Model House People collection <strong>AND</strong> the the VM HouseVM PeopleVM ObservableCollection.</p>\n\n<p><strong>Is this structure correct MVVM?<br>\nIs there anyway to avoid having to do the double update for Adds and Removes?</strong></p>\n",
      "up_vote_count": 38,
      "answer_count": 2,
      "view_count": 5953,
      "creation_date": 1365153172,
      "owner": {
        "display_name": "Ricibob",
        "profile_image": "https://www.gravatar.com/avatar/ffe3e3839d22efe2c0cbcb0c70743feb?s=128&d=identicon&r=PG",
        "reputation": 4507,
        "badge_counts": {
          "gold": 1,
          "silver": 28,
          "bronze": 53,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "collections",
        "viewmodel"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Project structure for MVVM in WPF",
      "body": "<p>What is the project structure you end up with when using MVVM in WPF?</p>\n\n<p>From the tutorials I saw now, they usually have folders: Model, ModelView and\nView. </p>\n\n<p>In Model you put classes like Person for example that capture data\nand logic. </p>\n\n<p>In ModelView you instantiate classes defined in Model. The View contains\n.xaml files.</p>\n\n<p>Edit: I edit my original post to send an example project structure.\nI have question related to this. How do I organize these:\nApp.config\nApp.xaml\nMainWindow.xaml</p>\n\n<p>Should I leave them outside like they are now or should I put them in some folder?</p>\n\n<p><img src=\"https://i.stack.imgur.com/KLjhT.png\" alt=\"enter image description here\"></p>\n",
      "up_vote_count": 38,
      "answer_count": 4,
      "view_count": 30063,
      "creation_date": 1379327591,
      "owner": {
        "display_name": "user2381422",
        "profile_image": "https://www.gravatar.com/avatar/9fb3dc208ce9cb8cd3d905c464407bf9?s=128&d=identicon&r=PG",
        "reputation": 1896,
        "badge_counts": {
          "gold": 6,
          "silver": 27,
          "bronze": 48,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "xaml",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF MVVM ComboBox SelectedItem or SelectedValue not working",
      "body": "<p><strong>Update</strong></p>\n\n<p>After a bit of investigating.  What seems to be the issue is that the SelectedValue/SelectedItem is occurring before the Item source is finished loading.  If I sit in a break point and wait a few seconds it works as expected.  Don't know how I'm going to get around this one.</p>\n\n<p><strong>End Update</strong></p>\n\n<p>I have an application using in WPF using MVVM with a ComboBox.  Below is the ViewModel Example.  The issue I'm having is when we leave our page and migrate back the ComboBox is not selecting the current Value that is selected.</p>\n\n<p><strong>View Model</strong></p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>public class MyViewModel\n{\n     private MyObject _selectedObject;\n     private Collection&lt;Object2&gt; _objects;\n     private IModel _model;\n\n     public MyViewModel(IModel model)\n    {\n         _model = model;\n         _objects = _model.GetObjects();\n    }\n\n    public Collection&lt;MyObject&gt; Objects\n    {\n         get\n         {\n              return _objects;\n         }\n         private set\n         {\n              _objects = value;\n         }\n     }\n\n     public MyObject SelectedObject\n     {\n          get\n          {\n              return _selectedObject;\n          }\n          set\n          {\n               _selectedObject = value;\n          }\n      }\n }\n</code></pre>\n\n<p>For the sake of this example lets say MyObject has two properties (Text and Id).  My XAML for the ComboBox looks like this.</p>\n\n<p>XAML</p>\n\n<pre><code>&lt;ComboBox Name=\"MyComboBox\" Height=\"23\"  Width=\"auto\" \n    SelectedItem=\"{Binding Path=SelectedObject,Mode=TwoWay}\" \n    ItemsSource=\"{Binding Objects}\"\n    DisplayMemberPath=\"Text\"\n    SelectedValuePath=\"Id\"&gt;\n</code></pre>\n\n<p>No matter which way I configure this when I come back to the page and the object is reassembled the ComboBox will not select the value.  The object is returning the correct object via the get in the property though.</p>\n\n<p>I'm not sure if this is just an issue with the way the ComboBox and MVVM pattern works.  The text box binding we are doing works correctly.</p>\n",
      "up_vote_count": 37,
      "answer_count": 17,
      "view_count": 102933,
      "creation_date": 1237493810,
      "owner": {
        "display_name": "cjibo",
        "profile_image": "https://www.gravatar.com/avatar/401a2594c4d0b8ebfa737248d3659c34?s=128&d=identicon&r=PG",
        "reputation": 1739,
        "badge_counts": {
          "gold": 5,
          "silver": 20,
          "bronze": 32,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "combobox"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM: CollectionView in ViewModel or CollectionViewSource in xaml?",
      "body": "<p>I'm developing a WPF application using the MVVM pattern and I need to display a list of items in a ListView (with filtering), with the fields of the selected item displayed in a Master/Detail view. I'm torn between the following two ways of doing this:</p>\n\n<ol>\n<li>Exposing a CollectionView in my ViewModel, and binding to this.</li>\n<li>Exposing a plain IList in my ViewModel, and using CollectionViewSource to create the CollectionView in XAML.</li>\n</ol>\n\n<p>Is there an accepted way of doing this? Any thoughts on the best way?</p>\n",
      "up_vote_count": 36,
      "answer_count": 2,
      "view_count": 20785,
      "creation_date": 1244694522,
      "owner": {
        "display_name": "Grokys",
        "profile_image": "https://www.gravatar.com/avatar/b9e4240c77a883ebb5159b98392146b3?s=128&d=identicon&r=PG",
        "reputation": 10923,
        "badge_counts": {
          "gold": 12,
          "silver": 59,
          "bronze": 84,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "collections",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Should the MVVM ViewModel perform type conversion/validation?",
      "body": "<p>We're just getting into MVVM in WPF.</p>\n\n<p>We have implemented our ViewModels with 'strongly typed' properties (int, double? etc.) that we bind to in the view.</p>\n\n<p>Type conversion works OK, mostly, and so entering data is simple enough. But we run into problems with validation.</p>\n\n<p>If, say, a non-numeric value is entered in a text box bound to a numeric property, the conversion fails, the property is never set, and we never get a chance to provide proper feedback to the user. Worse, the property retains its current value, leading to a mismatch between what's displayed in the view and what's actually in the ViewModel.</p>\n\n<p>All this can be handled with value converters, I know. But I have seen several opinions to the effect that conversion should not be the view's responsibility at all. What is entered in the view are strings, and the conversion, validation etc. should be the ViewModel's responsibility (so the argument goes).</p>\n\n<p>If so, we should rewrite most of the properties on our ViewModels to string, and provide error information through the IErrorInfo interface, for example. It would surely make for simpler, leaner XAML in the view. On the other hand, conversion, validation etc. will be less declarative, explicit and flexible, from the point of view of the View designer.</p>\n\n<p>It seems to us these two approaches are fundamentally different, so before we decide, we'd like some informed SO opinions on the matter.</p>\n\n<p>So: should ViewModels expose a simplified, 'text-based' interface to the view and handle conversion internally? Or should ViewModel properties expose the actual data types, leaving such chores to the view to handle?</p>\n\n<p><strong>Update:</strong></p>\n\n<p>Hard to pick a winner here, but I finally landed on one of you who concludes more or less like myself.</p>\n\n<p>Specifically, we have decided to keep the ViewModel properties typed. The main reason for this is the flexibility it affords us in the design of the view, and the power of explicit, declarative conversion/formatting in XAML.</p>\n\n<p>I noticed an assumption with you who will disagree with us in this, that the design of the view is fixed and ready. Hence, no decisions about conversion, formatting etc. need be made in the view. But ours is an agile process, and we haven't got all the nitty gritty detail of the UI figured out on beforehand.</p>\n\n<p>In fact, leaving the details of the UI to be worked out along the way leaves room for creativity and besides, in my opinion, even a meticulously worked out design will always end up morphing throughout the implementation process.</p>\n\n<p>The point of all this is that whereas business rules enforcement certainly belongs in the ViewModel, it seems to us that simple conversion and formatting is a view-thing. It may sound like heresy, but I don't actually think type conversion in the view needs unit testing at all (so long av we unit test the actual type converters).</p>\n\n<p>All in all a great discussion, folks, with well formulated, informed opinions. Thanks.</p>\n",
      "up_vote_count": 36,
      "answer_count": 5,
      "view_count": 3922,
      "creation_date": 1251286906,
      "owner": {
        "display_name": "Tor Haugen",
        "profile_image": "https://www.gravatar.com/avatar/7fa0823b13a9954ffbf187618617b2fa?s=128&d=identicon&r=PG",
        "reputation": 11678,
        "badge_counts": {
          "gold": 7,
          "silver": 35,
          "bronze": 56,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "validation",
        "mvvm",
        "type-conversion"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Making sure OnPropertyChanged() is called on UI thread in MVVM WPF app",
      "body": "<p>In a WPF app that I'm writing using the MVVM pattern, I have a background process that doing it's thing, but need to get status updates from it out to the UI.</p>\n\n<p>I'm using the MVVM pattern, so my ViewModel knows virtually nothing of the view (UI) that is presenting the model to the user.</p>\n\n<p>Say I have the following method in my ViewModel:</p>\n\n<pre><code>public void backgroundWorker_ReportProgress(object sender, ReportProgressArgs e)\n{\n    this.Messages.Add(e.Message);\n    OnPropertyChanged(\"Messages\");\n}\n</code></pre>\n\n<p>In my view, I have a ListBox bound to the Messages property (a <code>List&lt;string&gt;</code>) of the ViewModel.  <code>OnPropertyChanged</code> fulfills the role of the <code>INotifyPropertyChanged</code> interface by calling a <code>PropertyChangedEventHandler</code>.</p>\n\n<p>I need to ensure that <code>OnPropertyChanged</code> is called on the UI thread - how do I do this?  I've tried the following:</p>\n\n<pre><code>public Dispatcher Dispatcher { get; set; }\npublic MyViewModel()\n{ \n    this.Dispatcher = Dispatcher.CurrentDispatcher;\n}\n</code></pre>\n\n<p>Then adding the following to the <code>OnPropertyChanged</code> method:</p>\n\n<pre><code>if (this.Dispatcher != Dispatcher.CurrentDispatcher)\n{\n    this.Dispatcher.Invoke(DispatcherPriority.Normal, new ThreadStart(delegate\n    {\n        OnPropertyChanged(propertyName);\n    }));\n    return;\n}\n</code></pre>\n\n<p>but this did not work.  Any ideas?</p>\n",
      "up_vote_count": 35,
      "answer_count": 5,
      "view_count": 27658,
      "creation_date": 1235655582,
      "owner": {
        "display_name": "Adam Barney",
        "profile_image": "https://www.gravatar.com/avatar/4eeb4579d42156861b31c22643613dd9?s=128&d=identicon&r=PG",
        "reputation": 1687,
        "badge_counts": {
          "gold": 3,
          "silver": 15,
          "bronze": 23,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        ".net",
        "wpf",
        "multithreading",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "What to use? MVC, MVP or MVVM or…?",
      "body": "<p>I will start a Java project to develop a desktop application. \nWhat to use as presentation layer pattern (MVC, MVP,MVVM or....)?</p>\n\n<p>...if it is possible, with some working small example... :-)</p>\n",
      "up_vote_count": 35,
      "answer_count": 4,
      "view_count": 17435,
      "creation_date": 1264022987,
      "owner": {
        "display_name": "Andrea",
        "profile_image": "https://www.gravatar.com/avatar/c4cda7f35e1e9cd31792192331e3895c?s=128&d=identicon&r=PG",
        "reputation": 448,
        "badge_counts": {
          "gold": 1,
          "silver": 6,
          "bronze": 21,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "java",
        "model-view-controller",
        "mvvm",
        "mvp"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "One sentence explanation to MVVM in WPF?",
      "body": "<p>I heard its the next best thing in building WPF UIs, but all existing\nexamples have dozens of lines of code - can I get a Hello World\nfor MVVM that explains in no uncertain terms what its all about?\nI'm fairly new to C#/.net as well, so maybe point me to some \nresources that could help too? </p>\n\n<p>Much appreciated!</p>\n",
      "up_vote_count": 34,
      "answer_count": 11,
      "view_count": 8761,
      "creation_date": 1248091335,
      "owner": {
        "display_name": "bluebit",
        "profile_image": null,
        "reputation": 0,
        "badge_counts": null,
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "design-patterns",
        "mvvm",
        "user-interface"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Android application architecture - MVVM or MVC?",
      "body": "<p>I got an android project I'm beginning to work on, and I want its structure to be as robust as possible.</p>\n\n<p>I'm coming from a WPF MVVM background and I've been reading a little about android applications architecture, but I just couldn't find a straight clear answer about which architecture I should use.</p>\n\n<p>Some people suggested using MVVM - <a href=\"http://vladnevzorov.com/2011/04/30/android-application-architecture-part-ii-architectural-styles-and-patterns/\" rel=\"noreferrer\">http://vladnevzorov.com/2011/04/30/android-application-architecture-part-ii-architectural-styles-and-patterns/</a></p>\n\n<p>and others suggested using MVC, but didn't specify how exactly it should be implemented.</p>\n\n<p>As I said I'm coming from a WPF-MVVM background, and therefore I know it heavily relies on bindings which as far as I understand, are not supported by default in Android.</p>\n\n<p>It seems like there is a 3rd party solution - <a href=\"http://code.google.com/p/android-binding/\" rel=\"noreferrer\">http://code.google.com/p/android-binding/</a>\nBut I don't know if I'd like to rely on that. What if its development would stop and it will not be supported by future APIs and etc..</p>\n\n<p>Basically what I'm looking for is a thorough tutorial that will teach me the best practices for building the application's structure. Folders and classes structure and etc. I just couldn't find any thorough tutorial, and I would have expected that Google would supply such a tutorial for its developers. I just don't think that this kind of documentation handles the technical aspect good enough - <a href=\"http://developer.android.com/guide/topics/fundamentals.html\" rel=\"noreferrer\">http://developer.android.com/guide/topics/fundamentals.html</a></p>\n\n<p>I hope I've been clear enough and that I'm not asking for too much, I just want to be sure about my application's structure, before my code will turn into a spaghetti monster.</p>\n\n<p>Thanks! </p>\n",
      "up_vote_count": 35,
      "answer_count": 1,
      "view_count": 14870,
      "creation_date": 1323891990,
      "owner": {
        "display_name": "Dror",
        "profile_image": "https://www.gravatar.com/avatar/3a52123a57911ecb2440a20eb94d5607?s=128&d=identicon&r=PG",
        "reputation": 1675,
        "badge_counts": {
          "gold": 4,
          "silver": 24,
          "bronze": 50,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "android",
        "model-view-controller",
        "architecture",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM Sample / Example Implementation in iOS",
      "body": "<p>HAs anyone implemented MVVM pattern in your iOS app without using ReactiveCocoa? </p>\n\n<p>Found lots of examples here, but all of them use Reactive Cocoa. I wanted a simple example of MVVM implementation.  </p>\n",
      "up_vote_count": 35,
      "answer_count": 4,
      "view_count": 12733,
      "creation_date": 1411376186,
      "owner": {
        "display_name": "Smitha",
        "profile_image": "https://www.gravatar.com/avatar/34da20f5476fb66c672caae33741bb94?s=128&d=identicon&r=PG&f=1",
        "reputation": 2801,
        "badge_counts": {
          "gold": 17,
          "silver": 72,
          "bronze": 118,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "ios",
        "mvvm",
        "architecture",
        "xcode5"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Enable/disable textbox based on checkbox selection in WPF using MVVM",
      "body": "<p>I have a WPF form with as many as 40 textboxes, with a checkbox for each. Each textbox should be enabled/disabled based on the value of its corresponding checkbox. I've seen solutions where we can use <code>ICommand</code> to achieve this, but how do I handle 40 individual cases without having 40 <code>ICommand</code> implementations?</p>\n",
      "up_vote_count": 33,
      "answer_count": 1,
      "view_count": 45066,
      "creation_date": 1294057920,
      "owner": {
        "display_name": "aliensurfer",
        "profile_image": "https://www.gravatar.com/avatar/adc2bbfda32dfc356b0c8c66f4d2ff0f?s=128&d=identicon&r=PG&f=1",
        "reputation": 762,
        "badge_counts": {
          "gold": 2,
          "silver": 12,
          "bronze": 32,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "The role of the model in MVVM",
      "body": "<p>I've read a few articles regarding the role of the (Data)Model in the MVVM pattern.\nHowever, i still could not figure what goes into the model.</p>\n\n<p>Should the model implement INotifyPropertyChanged? If so, what is difference between the VM and the model?</p>\n\n<p>If not, a change in the Model will not notify the VM and the View that it occured. So - considering the logic goes into the Model, it seems obvious that it should notify the ViewModel about some of it's changes. However, isn't it weird to implement INotifyPropertyChanged in both classes?</p>\n\n<p>Thank you very much!</p>\n",
      "up_vote_count": 33,
      "answer_count": 3,
      "view_count": 12307,
      "creation_date": 1297937577,
      "owner": {
        "display_name": "Horse Pen",
        "profile_image": "https://www.gravatar.com/avatar/a45b2a5f0562fe7aa82bc774ab6effb9?s=128&d=identicon&r=PG",
        "reputation": 217,
        "badge_counts": {
          "gold": 1,
          "silver": 4,
          "bronze": 6,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF MVVM navigate views",
      "body": "<p>I have a WPF application with multiple views. I want toswitch from view 1 to view 2 and from there i can switch to multiple views. So I want a button on view 1 that loads view2 in the same window.</p>\n\n<p>I tried those things, but cant get it to work.</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/9290269/mvvm-light-toolkit-galasoft-for-wpf-navigation-through-windows\">How to navigate through windows with MVVM Light for WPF?</a></li>\n<li><a href=\"http://blog.galasoft.ch/archive/2011/01/06/navigation-in-a-wp7-application-with-mvvm-light.aspx\" rel=\"noreferrer\">http://blog.galasoft.ch/archive/2011/01/06/navigation-in-a-wp7-application-with-mvvm-light.aspx</a></li>\n</ul>\n\n<p>From the first link the problem is that i dont understand the viewmodellocator code. They call the CreateMain(); function but where is this defined, and how can i switch to an other view from inside a view.</p>\n",
      "up_vote_count": 33,
      "answer_count": 4,
      "view_count": 45777,
      "creation_date": 1383039014,
      "owner": {
        "display_name": "user2499088",
        "profile_image": "https://www.gravatar.com/avatar/c6bd19b02692e59fc6dfd1e53934dd64?s=128&d=identicon&r=PG",
        "reputation": 200,
        "badge_counts": {
          "gold": 1,
          "silver": 3,
          "bronze": 9,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm",
        "navigation"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM Light: Adding EventToCommand in XAML without Blend, easier way or snippet?",
      "body": "<p>Can anyone tell me what the actual syntax is for <code>EventToCommand</code> class. From what I believe is that <code>EventToCommand</code> class works with Silverlight / WPF and WP7, hence I think its a better choice to go down.</p>\n\n<p>From what I believe, I can add any click event and get it forced into my <code>ViewModel</code>, but I am having an issue in finding the best way to do this.</p>\n\n<p>I know you can add it without Blend, but are there snippets available? </p>\n\n<p>Or is there an easier way to add it via VS 2010? Any help or if anyone knows of a good tutorial on this would be great.</p>\n",
      "up_vote_count": 32,
      "answer_count": 4,
      "view_count": 39883,
      "creation_date": 1304421164,
      "owner": {
        "display_name": "Martin",
        "profile_image": "https://www.gravatar.com/avatar/5d299e5e519f4b916dd606dec782955a?s=128&d=identicon&r=PG",
        "reputation": 8451,
        "badge_counts": {
          "gold": 33,
          "silver": 149,
          "bronze": 257,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "mvvm",
        "mvvm-light",
        "eventtocommand"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "In MVVM, is every ViewModel coupled to just one Model?",
      "body": "<p>In an MVVM implementation, is every <code>ViewModel</code> coupled to just one <code>Model</code>?</p>\n\n<p>I am trying to implement the MVVM pattern in a project but I found that sometimes, a <code>View</code> may need information from multiple <code>Models</code>. </p>\n\n<p>For example, for a <code>UserProfileView</code>, its <code>UserProfileViewModel</code> may need information from <code>UserAccountModel</code>, <code>UserProfileSettingsModel</code>, <code>UserPostsDataModel</code>, etc.</p>\n\n<p>However, in most articles I read about MVVM, the ViewModel only consists on one Model via Dependency Injection. So the constructor takes in only one Model.</p>\n\n<p>How would the <code>ViewModel</code> work when it has to get information from multiple <code>Models</code>? Or would such a situation ever occur in MVVM?</p>\n\n<p>PS: I am not using the Prism or Unity Framework. I am trying to implement similar patterns into a project that I am working on which doesn't use Prism or Unity. That's why I need to understand exactly how some of these things work.</p>\n",
      "up_vote_count": 33,
      "answer_count": 7,
      "view_count": 16618,
      "creation_date": 1351249244,
      "owner": {
        "display_name": "Carven",
        "profile_image": "https://www.gravatar.com/avatar/4304d04bb6be57089a2447b3806e269d?s=128&d=identicon&r=PG",
        "reputation": 4495,
        "badge_counts": {
          "gold": 16,
          "silver": 64,
          "bronze": 100,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "design-patterns",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "How can I make a TextBox be a &quot;password box&quot; and display stars when using MVVM?",
      "body": "<p>How can I do this in XAML:</p>\n\n<p><em>PSEUDO-CODE:</em></p>\n\n<pre><code>&lt;TextBox Text=\"{Binding Password}\" Type=\"Password\"/&gt;\n</code></pre>\n\n<p>so that the user sees stars or dots when he is typing in the password.</p>\n\n<p>I've tried <a href=\"http://pstaev.blogspot.com/2007/01/password-textbox-in-wpf.html\" rel=\"noreferrer\">various examples</a> which suggest <strong>PasswordChar</strong> and <strong>PasswordBox</strong> but can't get these to work.</p>\n\n<p>e.g. I can do this as shown <a href=\"http://www.a2zdotnet.com/View.aspx?id=84\" rel=\"noreferrer\">here</a>:</p>\n\n<pre><code>&lt;PasswordBox Grid.Column=\"1\" Grid.Row=\"1\"\n    PasswordChar=\"*\"/&gt;\n</code></pre>\n\n<p>but I of course want to bind the Text property to my ViewModel so I can send the value the bound TextBox when the button is clicked (not working with code behind), I want to do this:</p>\n\n<pre><code>&lt;TextBox Grid.Column=\"1\" Grid.Row=\"0\" \n    Text=\"{Binding Login}\" \n    Style=\"{StaticResource FormTextBox}\"/&gt;\n&lt;PasswordBox Grid.Column=\"1\" Grid.Row=\"1\"\n    Text=\"{Binding Password}\" \n    PasswordChar=\"*\"\n    Style=\"{StaticResource FormTextBox}\"/&gt;\n</code></pre>\n\n<p>But PasswordBox doesn't have a Text property.</p>\n",
      "up_vote_count": 31,
      "answer_count": 6,
      "view_count": 77939,
      "creation_date": 1247493484,
      "owner": {
        "display_name": "Edward Tanguay",
        "profile_image": "https://www.gravatar.com/avatar/a9eaafb332f36840447f60dd85b94d19?s=128&d=identicon&r=PG",
        "reputation": 72716,
        "badge_counts": {
          "gold": 256,
          "silver": 619,
          "bronze": 943,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "xaml",
        "mvvm",
        "textbox",
        "passwords"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Why MVVM and what are it&#39;s core benefits?",
      "body": "<p>Why we go for MVVM over MVC or MVP while dealing with WPF?</p>\n\n<p>What extra benefit we get by using this?</p>\n\n<p>Edit:</p>\n\n<p>To be honest , today I had an interview and I have been asked this question. I answered  like INotifyPropertyChanged , ICommand,IValue Convertor.. but he was not satisfied. Henceforth I have put up this question</p>\n\n<p>Thanks in advance </p>\n",
      "up_vote_count": 31,
      "answer_count": 6,
      "view_count": 26352,
      "creation_date": 1256829338,
      "owner": {
        "display_name": "priyanka.sarkar",
        "profile_image": "https://www.gravatar.com/avatar/197aa75de3b7ddccaca3ee2688fd4776?s=128&d=identicon&r=PG",
        "reputation": 10284,
        "badge_counts": {
          "gold": 28,
          "silver": 90,
          "bronze": 140,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM ViewModel vs. MVC ViewModel",
      "body": "<p>ViewModel is a term that is used in both MVVM (Model-View-ViewModel) and the recommended implementation for ASP.NET MVC.  Researching \"ViewModel\" can be confusing given that each pattern uses the same term.</p>\n\n<p>What are the main differences between the MVC ViewModel and MVVM ViewModel?  For example, I believe the MVVM ViewModel is more rich, given the lack of a Controller.  Is this true?</p>\n",
      "up_vote_count": 31,
      "answer_count": 3,
      "view_count": 12405,
      "creation_date": 1261392161,
      "owner": {
        "display_name": "Neil Barnwell",
        "profile_image": "https://www.gravatar.com/avatar/fac42e3f137bfe0f34b8493c41d28f9e?s=128&d=identicon&r=PG",
        "reputation": 27422,
        "badge_counts": {
          "gold": 22,
          "silver": 117,
          "bronze": 197,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "asp.net-mvc",
        "design-patterns",
        "mvvm",
        "viewmodel"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "How to implement a progress bar using the MVVM pattern",
      "body": "<p>I have a WPF application which is built on the MVVM design pattern.</p>\n\n<p>I wish to implement a progress bar in the app, that follows the MVVM pattern.</p>\n\n<p>Does any one have any suggestions on how to implement this?</p>\n\n<p>Thanks in advance</p>\n",
      "up_vote_count": 31,
      "answer_count": 3,
      "view_count": 33695,
      "creation_date": 1282209859,
      "owner": {
        "display_name": "jpgooner",
        "profile_image": "https://www.gravatar.com/avatar/49877b59b48816b516e96c1b88e529a4?s=128&d=identicon&r=PG",
        "reputation": 291,
        "badge_counts": {
          "gold": 2,
          "silver": 5,
          "bronze": 10,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "ViewModels in ViewModelLocator MVVM Light",
      "body": "<p>Is it correct to store all my ViewModels in SimpleIoc? For instance I am having three pages MainPage, Photos, Directories (therefore three ViewModels -> MainVM, PhotosVM, DirectoriesVM). Should I set DataContext in each page to View Model Property in ViewModelLocator or nest ViewModels as properties in MainVM and bind each page DataContext to Main.PhotosVMProperty, Main.DirectoriesVMProperty and so on? Could anyone explain me idea and purpose of IoC ?</p>\n",
      "up_vote_count": 31,
      "answer_count": 2,
      "view_count": 38396,
      "creation_date": 1357166056,
      "owner": {
        "display_name": "fex",
        "profile_image": "https://www.gravatar.com/avatar/81405f60e6922b4de689e25ebcd47a7f?s=128&d=identicon&r=PG&f=1",
        "reputation": 2286,
        "badge_counts": {
          "gold": 3,
          "silver": 18,
          "bronze": 38,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "xaml",
        "mvvm-light"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Binding [VisualStateManager] view state to a MVVM viewmodel?",
      "body": "<p>How do you bind the VisualStateManager state of a control to a property in you viewmodel?\nCan it be done?</p>\n",
      "up_vote_count": 30,
      "answer_count": 4,
      "view_count": 15740,
      "creation_date": 1305378959,
      "owner": {
        "display_name": "aL3891",
        "profile_image": "https://graph.facebook.com/653404151/picture?type=large",
        "reputation": 4722,
        "badge_counts": {
          "gold": 1,
          "silver": 23,
          "bronze": 36,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "silverlight",
        "xaml",
        "mvvm",
        "visualstatemanager"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Concrete examples of state sharing between multiple viewmodels (WPF MVVM)",
      "body": "<p>I have a WPF/Entity Framework (4.0) project with many objects. I'd like to build the application so that that I can have object selection state shared across viewmodels. </p>\n\n<p>For Example: We have Cars, Drivers, Passengers, and Cargo classes. We also have UserControls for CarList, DriverList, etc. and editor windows for CarEditor, DriverEditor, etc. Furthermore, we have viewmodels for all of these (CarListViewModel, DriverListViewModel, CargoEditorViewModel, etc). This all composes a dockable interface where the user can have multiple object lists, editors, and viewers open.</p>\n\n<p>What I want is a concrete code example of how to wireup multiple viewmodels so that selecting a car in the CarList will cause that car to go live in the CarEditorView, but also be selected in any other view for which the context is valid (such as a DriverByCarView- or just DriverList if there is a filter predicate).</p>\n\n<p>There are a number of suggestions and discussions based on this question. The two methods that seem to dominate are:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/3018307/sharing-state-changes-across-viewmodels\">3018307</a>: Discusses state sharing by mentioning a messaging subsystem</li>\n<li><a href=\"https://stackoverflow.com/questions/1159035/sharing-state-between-viewmodels\">1159035</a>: Discusses state sharing by using an enclosing viewmodel</li>\n</ul>\n\n<p><strong>Is one of these approaches better than the other?</strong></p>\n\n<p><strong>Does anyone have a concrete example of either/both of these methods in the form of a write-up or small code project?</strong> </p>\n\n<p>I'm still learning WPF, so pointers to entry points for reading API fundamentals are appreciated, but looking at code examples is where I usually go.</p>\n\n<p>Thanks</p>\n\n<hr>\n\n<p>In case anyone is interested, here are some other similar discussions:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/3816961/wpf-mvvm-itemscontrol-with-multiple-viewmodels-depending-on-the-object-type\">3816961</a>: Discusses returning multiple viewmodels depending on object type (i.e. a collection of arbitrary types adhering to a specific interface)</li>\n<li><a href=\"https://stackoverflow.com/questions/1928130/is-it-a-good-idea-to-aggregate-viewmodels-in-wpf\">1928130</a>: Discusses whether it is a good idea to aggregate viewmodels as properties of other viewmodels (e.g. a MainWindow viewmodel composed of panel viewmodels)</li>\n<li><a href=\"https://stackoverflow.com/questions/1120061/mvvm-wpf-viewmodels-for-adding-new-entity\">1120061</a>: Essentially discusses whether to have use a viewmodel-per-model strategy or a viewmodel-per-view-element strategy.</li>\n<li><a href=\"https://stackoverflow.com/questions/4244222/building-viewmodels-based-on-nested-model-entities-in-wpf-and-mvvm-pattern\">4244222</a>: Discusses whether or not to nest the viewmodels when using a nested object hierarchy.</li>\n<li><a href=\"https://stackoverflow.com/questions/4429708/sharing-data-between-silverlight-viewmodels\">4429708</a>: Discusses sharing collections between viewmodels directly, but doesn't go into detail.</li>\n<li><a href=\"https://stackoverflow.com/questions/803216/managing-multiple-selections-with-mvvm\">List item</a>: Discusses managing multiple selections within a single viewmodel.</li>\n</ul>\n",
      "up_vote_count": 29,
      "answer_count": 1,
      "view_count": 8210,
      "creation_date": 1294186935,
      "owner": {
        "display_name": "JohnMetta",
        "profile_image": "https://www.gravatar.com/avatar/1b086aa8bac802b997f72efb7c4b481f?s=128&d=identicon&r=PG",
        "reputation": 4813,
        "badge_counts": {
          "gold": 4,
          "silver": 20,
          "bronze": 49,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm",
        "data-binding"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Implementing &quot;close window&quot; command with MVVM",
      "body": "<p>So my first attempt did everything out of the code behind, and now I'm trying to refactor my code to use the MVVM pattern, following the guidance of the MVVM <a href=\"http://karlshifflett.wordpress.com/2010/11/07/in-the-box-ndash-mvvm-training/\" rel=\"nofollow noreferrer\">in the box</a> information. </p>\n\n<p>I've created a viewmodel class to match my view class, and I'm moving the code out of the code behind into the viewmodel starting with the commands.</p>\n\n<p>My first snag is trying to implement a 'Close' button that closes the window if the data has not been modified.  I've rigged up a CloseCommand to replace the 'onClick' method and all is good except for where the code tries to run <code>this.Close()</code>.  Obviously, since the code has been moved from a window to a normal class, 'this' isn't a window and therefore isn't closeable.  However, according to MVVM, the viewmodel doesn't know about the view, so i can't call <code>view.Close()</code>.</p>\n\n<p>Can someone suggest how I can close the window from the viewmodel command?\n</p>\n",
      "up_vote_count": 30,
      "answer_count": 13,
      "view_count": 45608,
      "creation_date": 1344918719,
      "owner": {
        "display_name": "mcalex",
        "profile_image": "https://www.gravatar.com/avatar/dcd587470f1896d43243bd0856ecd06d?s=128&d=identicon&r=PG",
        "reputation": 4499,
        "badge_counts": {
          "gold": 3,
          "silver": 25,
          "bronze": 55,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm",
        "relaycommand"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM for winforms",
      "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"https://stackoverflow.com/questions/595469/ui-design-pattern-for-windows-forms-like-mvvm-for-wpf\">UI Design Pattern for Windows Forms (like MVVM for WPF)</a>  </p>\n</blockquote>\n\n\n\n<p>Should MVVM be used for WinForms? If so, what is the advantage over using MVP?</p>\n",
      "up_vote_count": 28,
      "answer_count": 6,
      "view_count": 30402,
      "creation_date": 1244746881,
      "owner": {
        "display_name": "SA.",
        "profile_image": "https://www.gravatar.com/avatar/1771d687089e1ef3360c8cbab1e92ef6?s=128&d=identicon&r=PG",
        "reputation": 180,
        "badge_counts": {
          "gold": 1,
          "silver": 3,
          "bronze": 9,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "winforms",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Binding an Image in WPF MVVM",
      "body": "<p>I am having some trouble binding in Image to my viewmodel. I finally got rid of the XamlParseException, but the image does not come up. I even hard coded the image in the ViewModel. Can someone see what I am doing wrong?                 </p>\n\n<p>View:</p>\n\n<pre><code>&lt;Image HorizontalAlignment=\"Left\" Margin=\"0,0,0,0\" Name=\"image1\" Stretch=\"Fill\" VerticalAlignment=\"Bottom\" Grid.Row=\"8\" Width=\"200\"  Grid.ColumnSpan=\"2\" &gt;\n&lt;Image.Source&gt;\n    &lt;BitmapImage DecodePixelWidth=\"200\" UriSource=\"{Binding Path=DisplayedImage, Mode=TwoWay}\" /&gt;\n&lt;/Image.Source&gt;\n</code></pre>\n\n<p></p>\n\n<p>ViewModel:</p>\n\n<pre><code> string _DisplayedImagePath = @\"C:\\Users\\Public\\Pictures\\Sample Pictures\\Chrysanthemum.jpg\";//string.Empty;\n    int _DisplayedImageIndex;\n    BitmapImage _DisplayedImage = null;\n    public BitmapImage DisplayedImage\n    {\n        get\n        {\n            _DisplayedImage = new BitmapImage();\n            if (!string.IsNullOrEmpty(_DisplayedImagePath))\n            {\n                _Rail1DisplayedImage.BeginInit();\n                _Rail1DisplayedImage.CacheOption = BitmapCacheOption.OnLoad;\n                _Rail1DisplayedImage.CreateOptions = BitmapCreateOptions.IgnoreImageCache;\n                _Rail1DisplayedImage.UriSource = new Uri(_DisplayedImagePath);\n                _Rail1DisplayedImage.DecodePixelWidth = 200;\n                _Rail1DisplayedImage.EndInit();\n            }\n            return _Rail1DisplayedImage;\n        }\n        set\n        {\n            _Rail1DisplayedImage = value;\n            OnPropertyChanged(\"DisplayedImage\");\n        }\n    }\n</code></pre>\n",
      "up_vote_count": 28,
      "answer_count": 2,
      "view_count": 61361,
      "creation_date": 1392409322,
      "owner": {
        "display_name": "kurgaan",
        "profile_image": "https://www.gravatar.com/avatar/dc7528e5c08bdc18c80374187395bcdc?s=128&d=identicon&r=PG",
        "reputation": 301,
        "badge_counts": {
          "gold": 1,
          "silver": 3,
          "bronze": 12,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "How do you handle a ComboBox SelectionChanged in MVVM?",
      "body": "<p>For those doing pure MVVM, how do you handle a ComboBox SelectionChanged event without reverting to code behind?</p>\n\n<p>I tried e.g. <a href=\"http://marlongrech.wordpress.com/2008/12/13/attachedcommandbehavior-v2-aka-acb/\" rel=\"noreferrer\">AttachedBehaviors </a>but Event=\"SelectedChanged\" is not supported:</p>\n\n<pre><code>&lt;ComboBox&gt;\n    &lt;ComboBoxItem Content=\"Test1\"&gt;\n        &lt;c:CommandBehaviorCollection.Behaviors&gt;\n            &lt;c:BehaviorBinding Event=\"SelectionChanged\" \n                               Command=\"{Binding SelectedChanged}\"\n                               CommandParameter=\"MainBorder123\"/&gt;\n        &lt;/c:CommandBehaviorCollection.Behaviors&gt;\n    &lt;/ComboBoxItem&gt;\n    &lt;ComboBoxItem Content=\"Test2\"/&gt;\n    &lt;ComboBoxItem Content=\"Test3\"/&gt;\n&lt;/ComboBox&gt;\n</code></pre>\n",
      "up_vote_count": 27,
      "answer_count": 3,
      "view_count": 46702,
      "creation_date": 1244121313,
      "owner": {
        "display_name": "Edward Tanguay",
        "profile_image": "https://www.gravatar.com/avatar/a9eaafb332f36840447f60dd85b94d19?s=128&d=identicon&r=PG",
        "reputation": 72716,
        "badge_counts": {
          "gold": 256,
          "silver": 619,
          "bronze": 943,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "events",
        "mvvm",
        "attachedbehaviors"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF MVVM Unit Tests for the ViewModel?",
      "body": "<p>I keep reading about the benefits of using MVVM, especially for unit testing. So, now I need to write unit tests for my ViewModel. Does anyone have any examples of this? Should I just generate the unit tests using VS2008 and select those tests that appear important?</p>\n",
      "up_vote_count": 27,
      "answer_count": 2,
      "view_count": 22548,
      "creation_date": 1253224730,
      "owner": {
        "display_name": "Shafique",
        "profile_image": "https://i.stack.imgur.com/UHAOR.jpg?s=128&g=1",
        "reputation": 903,
        "badge_counts": {
          "gold": 6,
          "silver": 18,
          "bronze": 33,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "unit-testing",
        "mvvm",
        "viewmodel"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM and IOC: Handling View Model&#39;s Class Invariants",
      "body": "<p>This is an issue I've been struggling with since I started using MVVM, first in WPF and now in Silverlight.</p>\n\n<p>I use an IOC container to manage the resolution of Views and ViewModels.  Views tend to be very basic, with a default constructor, but ViewModels tend to access real services, all of which are required for their construction.  Again, I use an IOC container for resolution, so injecting services is not a problem.</p>\n\n<p>What does become a problem is passing required data to the ViewModel using IOC.  As a simple example, consider a screen that allows the editing of a customer.  In addition to any services it might require, the ViewModel for this screen requires a customer object for displaying/editing the customer's data.</p>\n\n<p>When doing any type of (non-MVVM) library development, I consider it an unbendable rule that class invariants be passed via the constructor.  In cases where I need context-specific data for class construction time <em>and</em> the class in question is container-managed, I tend to use an abstract factory* as a bridge.  In MVVM this seems like overkill, as most ViewModels will then require their own factory.</p>\n\n<p>A few other approaches I have tried/considered included (1) an initialize/load method in which I pass the data, which violates the rule of forcing class invariants through the constructor, (2) passing data through the container as parameter overrides (Unity), and (3) passing data through a global state bag (ugh).</p>\n\n<p>What are some alternative ways to pass context-specific data from one ViewModel to the next?  Do any of the MVVM frameworks address this specific problem?</p>\n\n<p>*<em>which can have its own problems, like requiring a choice between a call to Container.Resolve() or not having your ViewModel container-managed.  Castle Windsor has a good solution to this, but AFAIK no other framework does.</em></p>\n\n<p><strong>Edit:</strong></p>\n\n<p>I forgot to add: some of the options I listed are not even possible if you are doing \"View First\" MVVM, unless you pass data first to the View and then to the ViewModel.</p>\n",
      "up_vote_count": 27,
      "answer_count": 3,
      "view_count": 3675,
      "creation_date": 1307459399,
      "owner": {
        "display_name": "Phil Sandler",
        "profile_image": "https://www.gravatar.com/avatar/708ad100951fa559d901d5ecaa8fefff?s=128&d=identicon&r=PG",
        "reputation": 18124,
        "badge_counts": {
          "gold": 15,
          "silver": 61,
          "bronze": 118,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "mvvm",
        "dependency-injection",
        "inversion-of-control"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF MVVM Modal Overlay Dialog only over a View (not Window)",
      "body": "<p>I'm pretty much new to the MVVM architecture design...</p>\n\n<p>I was struggling lately to find a suitable control already written for such a purpose but had no luck, so I reused parts of XAML from another similar control and got make my own.</p>\n\n<p>What I want to achieve is:</p>\n\n<p>Have a reusable View (usercontrol) + viewmodel (to bind to) to be able to use inside other views as a modal overlay showing a dialog that disables the rest of the view, and shows a dialog over the it. </p>\n\n<p><img src=\"https://i.stack.imgur.com/jLA5d.png\" alt=\"enter image description here\"></p>\n\n<p>How I wanted to implement it:</p>\n\n<ul>\n<li>create a viewmodel that takes string(message) and action+string collection(buttons)</li>\n<li>viewmodel creates a collection of ICommands that call those actions</li>\n<li>dialog view binds to the its viewmodel that will be exposed as property of another viewmodel (parent)</li>\n<li>dialog view is put into the xaml of the parent like this:</li>\n</ul>\n\n<p>pseudoXAML:</p>\n\n<pre><code>    &lt;usercontrol /customerview/ ...&gt;\n       &lt;grid&gt;\n         &lt;grid x:Name=\"content\"&gt;\n           &lt;various form content /&gt;\n         &lt;/grid&gt;\n         &lt;ctrl:Dialog DataContext=\"{Binding DialogModel}\" Message=\"{Binding Message}\" Commands=\"{Binding Commands}\" IsShown=\"{Binding IsShown}\" BlockedUI=\"{Binding ElementName=content}\" /&gt;\n      &lt;/grid&gt;\n    &lt;/usercontrol&gt;\n</code></pre>\n\n<p>So here the modal dialog gets the datacontext from the DialogModel property of the Customer viewmodel, and binds commands and message. It would be also bound to some other element (here 'content') that needs to be disabled when the dialog shows (binding to IsShown). When you click some button in the dialog the associated command is called that simply calls the associated action that was passed in the constructor of the viewmodel.</p>\n\n<p>This way I would be able to call Show() and Hide() of the dialog on the dialog viewmodel from inside the Customer viewmodel and alter the dialog viewmodel as needed.</p>\n\n<p>It would give me only one dialog at a time but that is fine.\nI also think that the dialog viewmodel would remain unittestable, since the unittests would cover the calling of the commands that ought to be created after it being created with Actions in the constructor. There would be a few lines of codebehind for the dialog view, but very little and pretty dumb (setters getters, with almost no code).</p>\n\n<p>What concerns me is:</p>\n\n<p>Is this ok?\nAre there any problems I could get into?\nDoes this break some MVVM principles?</p>\n\n<p>Thanks a lot!</p>\n\n<p>EDIT: I posted my complete solution so you can have a better look. Any architectural comments welcome. If you see some syntax that can be corrected the post is flagged as community wiki.</p>\n",
      "up_vote_count": 27,
      "answer_count": 3,
      "view_count": 26557,
      "creation_date": 1308096421,
      "owner": {
        "display_name": "Marino Šimić",
        "profile_image": "https://www.gravatar.com/avatar/95451bd31b5ecc84ecbce12dde54c36e?s=128&d=identicon&r=PG",
        "reputation": 6015,
        "badge_counts": {
          "gold": 1,
          "silver": 18,
          "bronze": 52,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm",
        "wpf-controls"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF MVVM TreeView SelectedItem",
      "body": "<p>This cannot be this difficult. The TreeView in WPF doesn't allow you to set the SelectedItem, saying that the property is ReadOnly. I have the TreeView populating, even updating when it's databound collection changes.</p>\n\n<p>I just need to know what item is selected. I am using MVVM, so there is no codebehind or variable to reference the treeview by. <a href=\"https://stackoverflow.com/questions/1238304/c-wpf-get-selecteditem-from-treeview\">This is the only solution</a> I have found, but it is an obvious hack, it creates another element in XAML that uses ElementName binding to set itself to the treeviews selected item, which you must then bind your Viewmodel too. <a href=\"https://stackoverflow.com/questions/6308817/wpf-treeview-selecteditem-databinding\">Several</a> other <a href=\"http://www.telerik.com/community/forums/wpf/treeview/selecteditem-bindable-in-mvvm.aspx\" rel=\"nofollow noreferrer\">questions</a> are asked about this, but no other working solutions are given.</p>\n\n<p>I have seen <a href=\"https://stackoverflow.com/questions/1000040/selecteditem-in-a-wpf-treeview\">this question</a>, but using the answer given gives me compile errors, for some reason I cannot add a reference to the blend sdk System.Windows.Interactivity to my project. It says \"unknown error system.windows has not been preloaded\" and I haven't yet figured out how to get past that.</p>\n\n<p>For Bonus Points: why the hell did Microsoft make this element's SelectedItem property ReadOnly?</p>\n",
      "up_vote_count": 27,
      "answer_count": 6,
      "view_count": 52479,
      "creation_date": 1314048433,
      "owner": {
        "display_name": "Tyrsius",
        "profile_image": "https://www.gravatar.com/avatar/3f93537e96ff843c2760f30039a8a3eb?s=128&d=identicon&r=PG",
        "reputation": 15317,
        "badge_counts": {
          "gold": 6,
          "silver": 54,
          "bronze": 114,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "treeview"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM, Unity, Prism, MEF, Caliburn - What should I use?",
      "body": "<p>Please help - I'm getting lost!</p>\n\n<p>I'm writing a small desktop application which has some controls and some screen. This should later be integrated with a small web site, also having some screens. The idea is to let the user edit videos and select images, and then share their results with her friends.</p>\n\n<p>The desktop app is using C# WPF, the web site - ASP.Net MVC.</p>\n\n<p>I read that growing the application past a few screens would be easier using MVVM. So I started searching and discovered Caliburn.Micro and MVVM.Light. I have downloaded some tutorials but, just as I was getting ready to deep-dive into the material, I found <a href=\"https://stackoverflow.com/questions/4750255/mvvm-light-unity-or-prism\">here on S.O</a>. that there's also Prism, MEF, Unity, ReactiveUI - This is becoming too much!</p>\n\n<p>I'm terrible at learning new things - It's taking me ages to study WPF and ASP.Net MVC. I don't want to study lots of new material only to find out later that it's not relevant. And I don't have an architect to instruct me.</p>\n\n<p>So my question is: <strong>Could you put these frameworks and technologies in perspective, and suggest which I should focus on studying and using (esp. what can be later used with Windows 8)?</strong></p>\n",
      "up_vote_count": 28,
      "answer_count": 3,
      "view_count": 20015,
      "creation_date": 1338294290,
      "owner": {
        "display_name": "Avi",
        "profile_image": "https://www.gravatar.com/avatar/7b8330109af4e1869075443e14e153a7?s=128&d=identicon&r=PG",
        "reputation": 4593,
        "badge_counts": {
          "gold": 4,
          "silver": 29,
          "bronze": 46,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "prism",
        "unity-container",
        "mef",
        "mvvm-light",
        "caliburn.micro"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "How can i access a control in mvvm model in viewmodel?",
      "body": "<p>I have a WPF Window, and in that window I have a grid.</p>\n\n<p>I use M-V-VM model and I want to add a TextBox to the grid dynamically in code(in viewmodel)</p>\n\n<p>How can I get access to the grid?</p>\n",
      "up_vote_count": 28,
      "answer_count": 5,
      "view_count": 34092,
      "creation_date": 1357737864,
      "owner": {
        "display_name": "Sanjay Patel",
        "profile_image": "https://graph.facebook.com/100000692924752/picture?type=large",
        "reputation": 606,
        "badge_counts": {
          "gold": 1,
          "silver": 5,
          "bronze": 21,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "silverlight",
        "mvvm",
        "devforce"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM: ViewModel and Business Logic Connection",
      "body": "<p>After doing a few Projects using the MVVM Pattern, Im still struggling with the Role of the ViewModel:</p>\n\n<p>What I did in the past:\nUsing the Model only as a Data Container.\nPutting the Logic to manipulate the Data in the ViewModel. (Thats the Business Logic right?)\nCon: Logic is not reusable.</p>\n\n<p>What I'm trying now:\nKeeping the ViewModel as thin as possible.\nMoving all Logic into the Model Layer.\nOnly keeping presentation Logic in the ViewModel.\nCon: Makes UI Notification realy painful If Data is Changed inside the Model Layer.</p>\n\n<p>So I will  give you an Example to make it more clearer:</p>\n\n<p>Scenario:\nTool to Rename Files. \nClasses:\nFile : Representing each File;\nRule: Contains Logic how to Rename a File;</p>\n\n<p>If Im following approach 1:\nCreating a ViewModel for File, Rule and the View -> RenamerViewModel.\nPutting all Logic in the RenamerViewModel: \nContaining a List of FileViewModel and RuleViewModel and the proceeding Logic.\nEasy and fast, but not reusable.</p>\n\n<p>If Im following approach 2:\nCreating a new Model Class -> Renamer, which contains a List of File, Rule und the proceeding Logic to interate over each File and apply each Rule.\nCreating a Viewmodel for File, Rule and Renamer.\nNow the RenamerViewModel only contains an instance of Renamer Model, plus two ObservableCollections to wrap the File und Rule List of the Renamer.\nBut the whole Logic is in the Renamer Model. So if the Renamer Model is triggered to manipulate some Data by Method Calls, the ViewModel has no Clue which Data is manipulated.\nBecause the Model doesnt Contain any PropertyChange Notification and I will avoid that.\nSo the Business and Presentation Logic is seperated, but this makes it hard to notify the UI.</p>\n",
      "up_vote_count": 27,
      "answer_count": 4,
      "view_count": 16919,
      "creation_date": 1367499098,
      "owner": {
        "display_name": "JDeuker",
        "profile_image": "https://i.stack.imgur.com/OpwkV.jpg?s=128&g=1",
        "reputation": 166,
        "badge_counts": {
          "gold": 1,
          "silver": 2,
          "bronze": 16,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "design-patterns",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM Light Messenger - Sending and Registering Objects",
      "body": "<p>Could somebody be kind enough to give me an example of how to Send and Register custom objects between classes using MVVM Light's Messenger or point me to a tutorial that covers this (preferably a concrete example)? I've been trying to use Messenger to pass an object in my project to another class but I've never been successful at it. I've looked online for examples but haven't found anything that shows me what I need. Thanks.</p>\n",
      "up_vote_count": 27,
      "answer_count": 1,
      "view_count": 33543,
      "creation_date": 1370644432,
      "owner": {
        "display_name": "Jason D",
        "profile_image": "https://www.gravatar.com/avatar/472a8b49d1035af7a4980b6b85661412?s=128&d=identicon&r=PG",
        "reputation": 1098,
        "badge_counts": {
          "gold": 5,
          "silver": 21,
          "bronze": 54,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "mvvm",
        "mvvm-light"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Opening new window in MVVM WPF",
      "body": "<p>I have Button and I have bind this button to command in ViewModel say OpenWindowCommand. When I click on button I want to open new window. But creating window instance and showing window from view model is violation of MVVM. I have created interface like</p>\n\n<pre><code>interface IWindowService\n{\n void showWindow(object dataContext);\n}\n</code></pre>\n\n<p>and WindowService implements this interface like</p>\n\n<pre><code>class WindowService:IWindowService\n{\n public void showWindow(object dataContext)\n {\n  ChildWindow window=new ChildWindow();\n  window.DataContext=dataContext;\n  window.Show();\n  }\n}\n</code></pre>\n\n<p>In this class I have specified ChildWindow. So this class is tightly coupled with showing ChildWindow. When I want to show another window,I have to implement another class with same interface and logic.How can I make this class generic so that I can pass just instance of any window and class will be able to open any window?\nI am not using any built MVVM frameworks.I have read many articles on StackOverflow but I could not found any solution for this.</p>\n",
      "up_vote_count": 27,
      "answer_count": 6,
      "view_count": 38907,
      "creation_date": 1410776151,
      "owner": {
        "display_name": "DT sawant",
        "profile_image": "https://www.gravatar.com/avatar/2aeb5f0313b64d1808d0b25ee77ed120?s=128&d=identicon&r=PG&f=1",
        "reputation": 420,
        "badge_counts": {
          "gold": 1,
          "silver": 5,
          "bronze": 14,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "wpf",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Where to store application settings/state in a MVVM application",
      "body": "<p>I'm experimenting with MVVM for the first time and really like the separation of responsibilities. Of course any design pattern only solves many problems - not all. So I'm trying to figure out where to store application state and where to store application wide commands. </p>\n\n<p>Lets say my application connects to a specific URL. I have a ConnectionWindow and a ConnectionViewModel that support gathering this information from the user and invoking commands to connect to the address. The next time the application starts, I want to reconnect to this same address without prompting the user. </p>\n\n<p>My solution so far is to create an ApplicationViewModel that provides a command to connect to a specific address and to save that address to some persistent storage (where it's actually saved is irrelevant for this question). Below is an abbreviated class model.</p>\n\n<p>The application view model:</p>\n\n<pre><code>public class ApplicationViewModel : INotifyPropertyChanged\n{\n    public Uri Address{ get; set; }\n    public void ConnectTo( Uri address )\n    { \n        // Connect to the address\n        // Save the addres in persistent storage for later re-use\n        Address = address;\n    }\n\n    ...\n}\n</code></pre>\n\n<p>The connection view model:</p>\n\n<pre><code>public class ConnectionViewModel : INotifyPropertyChanged\n{\n    private ApplicationViewModel _appModel;\n    public ConnectionViewModel( ApplicationViewModel model )\n    { \n        _appModel = model; \n    }\n\n    public ICommand ConnectCmd\n    {\n        get\n        {\n            if( _connectCmd == null )\n            {\n                _connectCmd = new LambdaCommand(\n                    p =&gt; _appModel.ConnectTo( Address ),\n                    p =&gt; Address != null\n                    );\n            }\n            return _connectCmd;\n        }\n    }    \n\n    public Uri Address{ get; set; }\n\n    ...\n}\n</code></pre>\n\n<p>So the question is this: Is an ApplicationViewModel the right way to handle this? How else might you store application state?</p>\n\n<p><strong>EDIT:</strong> I'd like to know also how this affects testability. One of the primary reasons for using MVVM is the ability to test the models without a host application. Specifically I'm interested in insight on how centralized app settings affect testability and the ability to mock out the dependent models.</p>\n",
      "up_vote_count": 26,
      "answer_count": 3,
      "view_count": 7058,
      "creation_date": 1240528385,
      "owner": {
        "display_name": "Paul Alexander",
        "profile_image": "https://www.gravatar.com/avatar/7094bef129a85ebc3ad19703b584e934?s=128&d=identicon&r=PG",
        "reputation": 23727,
        "badge_counts": {
          "gold": 7,
          "silver": 80,
          "bronze": 135,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "wpf",
        "unit-testing",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM: Should a VM object expose an M object directly, or only through getters delegating to M&#39;s getters?",
      "body": "<p>the best way to explain is with example so:</p>\n\n<p>this is the model</p>\n\n<pre><code>public class Person \n{\n    public int age;\n    public string name;\n}\n</code></pre>\n\n<p>this is the view model</p>\n\n<pre><code>public class PersonVM\n{    \n}\n</code></pre>\n\n<p>my question is:<br>\nshould the vm expose the person to the data template or encapsulate the model properties with his own properties?</p>\n",
      "up_vote_count": 26,
      "answer_count": 4,
      "view_count": 5088,
      "creation_date": 1247343706,
      "owner": {
        "display_name": "Chen Kinnrot",
        "profile_image": "https://www.gravatar.com/avatar/094c0ec476b95ed7619d6a4cb918da78?s=128&d=identicon&r=PG",
        "reputation": 10224,
        "badge_counts": {
          "gold": 12,
          "silver": 62,
          "bronze": 113,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "design-patterns",
        "mvvm",
        "getter",
        "access-modifiers"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM pattern for ASP.NET Webforms?",
      "body": "<p>I'm looking for an MVVM implementation for ASP.NET. How should I approach this ? Can you propose any design that solves this problem particularly for ASP.NET Webforms ?</p>\n\n<p>Thanks.</p>\n",
      "up_vote_count": 26,
      "answer_count": 5,
      "view_count": 17276,
      "creation_date": 1255946301,
      "owner": {
        "display_name": "this. __curious_geek",
        "profile_image": "https://www.gravatar.com/avatar/1184bd9bc33779ba796c88140ec33d77?s=128&d=identicon&r=PG",
        "reputation": 32313,
        "badge_counts": {
          "gold": 19,
          "silver": 93,
          "bronze": 127,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "asp.net",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "MVVM where to put Data Access Layer?",
      "body": "<p>I am investigating WPF's MVVM design pattern. But am unsure where to put the Data Acess code?</p>\n\n<p>In some examples I have looked at, data access is performed directly in the ViewModel. It seems odd to put something like linq to sql in the ViewModel? Other examples have a seperate project for Data Access, this seems more like it? </p>\n\n<p>Is this there a general approach? I feel like I am missing something here!</p>\n\n<p>Thanks</p>\n",
      "up_vote_count": 26,
      "answer_count": 6,
      "view_count": 19718,
      "creation_date": 1257969094,
      "owner": {
        "display_name": "Dan Black",
        "profile_image": "https://www.gravatar.com/avatar/4b117260865f2c0ee3aaa1dbeca5bf5e?s=128&d=identicon&r=PG",
        "reputation": 490,
        "badge_counts": {
          "gold": 2,
          "silver": 7,
          "bronze": 19,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        "design-patterns",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Reactive Extensions (Rx) + MVVM =?",
      "body": "<p>One of the main examples being used to explain the power of Reactive Extensions (Rx) is combining existing mouse events into a new 'event' representing deltas during mouse drag:</p>\n\n<pre><code>var mouseMoves = from mm in mainCanvas.GetMouseMove()\n                 let location = mm.EventArgs.GetPosition(mainCanvas)\n                 select new { location.X, location.Y};\n\nvar mouseDiffs = mouseMoves\n    .Skip(1)\n    .Zip(mouseMoves, (l, r) =&gt; new {X1 = l.X, Y1 = l.Y, X2 = r.X, Y2 = r.Y});\n\nvar mouseDrag = from _  in mainCanvas.GetMouseLeftButtonDown()\n                from md in mouseDiffs.Until(\n                    mainCanvas.GetMouseLeftButtonUp())\n                select md;\n</code></pre>\n\n<p>Source:  <a href=\"http://codebetter.com/blogs/matthew.podwysocki/archive/2009/11/12/introduction-to-the-reactive-framework-part-iii.aspx\" rel=\"noreferrer\" title=\"Introduction to the Reactive Framework Part III\">Matthew Podwysocki's Introduction to the Reactive Framework series</a>.</p>\n\n<p>In MVVM I generally strive to keep my .xaml.cs file as empty as possible and one way of hooking up events from the view with commands in the viewmodel purely in markup is using a behavior:</p>\n\n<pre><code>&lt;Button Content=\"Click Me\"&gt;\n    &lt;Behaviors:Events.Commands&gt;\n        &lt;Behaviors:EventCommandCollection&gt;\n            &lt;Behaviors:EventCommand CommandName=\"MouseEnterCommand\" EventName=\"MouseEnter\" /&gt;\n            &lt;Behaviors:EventCommand CommandName=\"MouseLeaveCommand\" EventName=\"MouseLeave\" /&gt;\n            &lt;Behaviors:EventCommand CommandName=\"ClickCommand\" EventName=\"Click\" /&gt;\n        &lt;/Behaviors:EventCommandCollection&gt;\n    &lt;/Behaviors:Events.Commands&gt;\n&lt;/Button&gt;\n</code></pre>\n\n<p>Source: <a href=\"http://geekswithblogs.net/HouseOfBilz/archive/2009/08/27/adventures-in-mvvm-ndash-binding-commands-to-any-event.aspx\" rel=\"noreferrer\" title=\"Adventures in MVVM – Binding Commands to ANY Event\">Brian Genisio</a>.</p>\n\n<p>The Reactive Framework seems to be more geared towards the traditional MVC pattern where a controller knows the view and can reference its events directly.</p>\n\n<p>But, I want to both have my cake and eat it!</p>\n\n<p>How would you combine these two patterns?</p>\n",
      "up_vote_count": 26,
      "answer_count": 5,
      "view_count": 11620,
      "creation_date": 1258638528,
      "owner": {
        "display_name": "Jesper Larsen-Ledet",
        "profile_image": "https://www.gravatar.com/avatar/f21a9d6f9c393a6a7c96473a264a33bf?s=128&d=identicon&r=PG",
        "reputation": 4914,
        "badge_counts": {
          "gold": 3,
          "silver": 22,
          "bronze": 40,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "mvvm",
        "system.reactive",
        "reactive-programming"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Websockets with ASP.NET MVC / MVVM",
      "body": "<p>Earlier today I came across <a href=\"http://kaazing.com\" rel=\"noreferrer\">Kaazing's</a> WebSocket API for HTML5.</p>\n\n<p>Looks fantastic, but as I am only now researching WebSocket possibilities for real-time financial updating, I would like to hear some recommendations, and pitfalls to avoid when planning out this architecture.</p>\n\n<p>I'm looking at ASP.Net MVC, and possibly some WPF/Silverlight MVVM.</p>\n\n<p>Are there other WebSocket API's that are better (and why), and some good examples?</p>\n\n<p>Also, what kind of traffic can WebSockets handle?  I mean, if we have over a million users on a system updating real-time, how do hardware requirements change because the software architecture implements WebSockets?</p>\n",
      "up_vote_count": 26,
      "answer_count": 6,
      "view_count": 13780,
      "creation_date": 1296759870,
      "owner": {
        "display_name": "ElHaix",
        "profile_image": "https://www.gravatar.com/avatar/5e175feb0a9092abd02950f4973d376a?s=128&d=identicon&r=PG",
        "reputation": 6789,
        "badge_counts": {
          "gold": 20,
          "silver": 87,
          "bronze": 166,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "c#",
        ".net",
        "asp.net-mvc",
        "mvvm",
        "websocket"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Binding a WPF DataGridComboBoxColumn with MVVM",
      "body": "<p>I've looked at the answers to <a href=\"https://stackoverflow.com/questions/3562934/using-wpf-datagridcomboboxcolumn-with-mvvm-binding-to-property-in-viewmodel\">various</a> <a href=\"https://stackoverflow.com/questions/1903057/wpf-datagridcomboboxcolumn\">questions</a>, but haven't managed to map the content in the answers to the problem I'm attempting to solve. I've reduced it down to the following code (representative of the outcome I'm trying to achieve), and basically want to be able to render the <code>Person.TitleId</code> as its corresponding <code>Title.TitleText</code> when the row isn't being edited, and have the drop-down bound correctly so that it displays the <code>TitleText</code>s in the drop-down and writes the associated <code>TitleId</code> back to the <code>Person</code> record when its changed.</p>\n\n<p>In short, what do I put in my <code>&lt;DataGridComboBoxColumn&gt;</code> to achieve this?</p>\n\n<p>App.xaml.cs</p>\n\n<pre><code>protected override void OnStartup(StartupEventArgs e)\n{\n    base.OnStartup(e);\n\n    var viewModel = new ViewModels.MainWindowViewModel();\n    var mainWindow = new MainWindow();\n    mainWindow.DataContext = viewModel;\n    mainWindow.ShowDialog();\n}\n</code></pre>\n\n<p>MainWindow.xaml</p>\n\n<pre><code>&lt;Grid&gt;\n    &lt;DataGrid AutoGenerateColumns=\"False\" ItemsSource=\"{Binding Path=Contacts}\"&gt;\n        &lt;DataGrid.Columns&gt;\n            &lt;DataGridComboBoxColumn Header=\"Title\" SelectedItemBinding=\"{Binding Person}\"&gt;\n                &lt;DataGridComboBoxColumn.ElementStyle&gt;\n                    &lt;Style TargetType=\"ComboBox\"&gt;\n                        &lt;Setter Property=\"ItemsSource\" Value=\"{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.Titles}\"/&gt;\n                        &lt;Setter Property=\"IsReadOnly\" Value=\"True\"/&gt;\n                    &lt;/Style&gt;\n                &lt;/DataGridComboBoxColumn.ElementStyle&gt;\n                &lt;DataGridComboBoxColumn.EditingElementStyle&gt;\n                    &lt;Style TargetType=\"ComboBox\"&gt;\n                        &lt;Setter Property=\"ItemsSource\" Value=\"{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.Titles}\"/&gt;\n                        &lt;Setter Property=\"DisplayMemberPath\" Value=\"TitleText\" /&gt;\n                    &lt;/Style&gt;\n                &lt;/DataGridComboBoxColumn.EditingElementStyle&gt;\n            &lt;/DataGridComboBoxColumn&gt;\n        &lt;/DataGrid.Columns&gt;\n    &lt;/DataGrid&gt;\n&lt;/Grid&gt;\n</code></pre>\n\n<p>Person.cs</p>\n\n<pre><code>public class Person\n{\n    public int TitleId { get; set; }\n    public string LastName { get; set; }\n    public string FirstName { get; set; }\n}\n</code></pre>\n\n<p>Title.cs</p>\n\n<pre><code>public struct Title\n{\n    public Title(int titleId, string titleText)\n        : this()\n    {\n        TitleId = titleId;\n        TitleText = titleText;\n    }\n\n    public string TitleText { get; private set; }\n    public int TitleId { get; private set; }\n\n    public static List&lt;Title&gt; GetAvailableTitles()\n    {\n        var titles = new List&lt;Title&gt;();\n\n        titles.Add(new Title(1, \"Mr\"));\n        titles.Add(new Title(2, \"Miss\"));\n        titles.Add(new Title(3, \"Mrs\"));\n\n        return titles;\n    }\n}\n</code></pre>\n\n<p>MainWindowViewModel.cs</p>\n\n<pre><code>public class MainWindowViewModel : ViewModelBase\n{\n    private ObservableCollection&lt;Person&gt; contacts;\n    private List&lt;Title&gt; titles;\n\n    public MainWindowViewModel()\n    {\n        titles = Title.GetAvailableTitles();\n\n        Contacts = new ObservableCollection&lt;Person&gt;();\n        Contacts.Add(new Person() { FirstName = \"Jane\", LastName = \"Smith\", TitleId = 2 });\n    }\n\n    public List&lt;Title&gt; Titles\n    {\n        get { return titles; }\n    }\n\n    public ObservableCollection&lt;Person&gt; Contacts\n    {\n        get { return contacts; }\n        set\n        {\n            if (contacts != value)\n            {\n                contacts = value;\n                this.OnPropertyChanged(\"Contacts\");\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>ViewModelBase.cs</p>\n\n<pre><code>public class ViewModelBase : INotifyPropertyChanged\n{\n    protected void OnPropertyChanged(string propertyName)\n    {\n        if (PropertyChanged != null)\n            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));\n    }\n\n    public event PropertyChangedEventHandler PropertyChanged;\n}\n</code></pre>\n",
      "up_vote_count": 26,
      "answer_count": 2,
      "view_count": 23058,
      "creation_date": 1301685146,
      "owner": {
        "display_name": "Rob",
        "profile_image": "https://www.gravatar.com/avatar/dfd35ba2f107e3b0ff97e8df1276ff94?s=128&d=identicon&r=PG",
        "reputation": 34778,
        "badge_counts": {
          "gold": 16,
          "silver": 95,
          "bronze": 123,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "datagrid",
        "datagridcomboboxcolumn"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF Canvas, how to add children dynamically with MVVM code behind",
      "body": "<h1>Requirement:</h1>\n\n<p>To draw one Bitmap Image (of 1024 x 1024 pixels) and rectangle(s) based on the collection of  points. The rectangle should exactly fit on the pixels location over the image. There is also some text need to be added inside the rectangle.</p>\n\n<p>The Image will be always only one and the rectangles will be dynamically added.</p>\n\n<h1>Current Solution:</h1>\n\n<p>Have a canvas with Image Control. Add the the dynamic code under the code behind file  ViewImageResult.xaml.cs.</p>\n\n<pre><code>    private void DrawResult(int left, int right, int width, int height)\n    {\n        Border bord = new Border();\n        bord.BorderThickness = new Thickness(1);\n        bord.BorderBrush = Brushes.Red;\n        bord.Width = width;\n        bord.Height = height;\n        _mainCanvas.Children.Add(bord);\n        Canvas.SetLeft(bord, left);\n        Canvas.SetTop(bord, right);\n    }\n</code></pre>\n\n<h1>Issue:</h1>\n\n<p>Since i follow MVVM pattern, the collection of points for rectangle is in my ViewModel file ViewImageResultModel.cs. I am not able to add the child rectangle dynamically from the ViewModel file.</p>\n\n<p>Any help is much appreciated.</p>\n\n<p>Thanks in advance</p>\n",
      "up_vote_count": 26,
      "answer_count": 2,
      "view_count": 23091,
      "creation_date": 1304696679,
      "owner": {
        "display_name": "Sathya Ram",
        "profile_image": "https://www.gravatar.com/avatar/8fdfa940af455190fc88850ca5c6dcb0?s=128&d=identicon&r=PG",
        "reputation": 186,
        "badge_counts": {
          "gold": 1,
          "silver": 2,
          "bronze": 9,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "canvas",
        "dynamic",
        "children"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "Angular2: MVC, MVVM or MV*?",
      "body": "<p>Angular one was following more or less the MVV* design principle because of its two-way data binding functionality.</p>\n\n<p>Angular2 is adopting a component-based UI, a concept that might be familiar to React developers. In a sense, the Angular 1.x controllers and directives blur into the new Angular 2 Component.</p>\n\n<p>This means that in Angular 2 there are no controllers and no directives. Instead, a component has a selector which corresponds to the html tag that the component will represent and a @View to specify an HTML template for the component to populate.</p>\n\n<p>Angular2 still implements two-way data-binding but does not consist of models for example if I have a <code>@Component</code> that displays a list of articles and a <code>class</code> that defines the article object:</p>\n\n<pre><code>class Article {\ntitle: string;\nlink: string;\nvotes: number;\n\nconstructor(title: string, link: string, votes?: number){\n    this.title = title;\n    this.link = link;\n    this.votes = votes || 0;\n}\n</code></pre>\n\n<p>This, in the MVC pattern would be considered the model.</p>\n\n<p>So considering this what design pattern does <code>Angular</code> follow the closest?</p>\n",
      "up_vote_count": 26,
      "answer_count": 4,
      "view_count": 19531,
      "creation_date": 1461989140,
      "owner": {
        "display_name": "AnonDCX",
        "profile_image": "https://i.stack.imgur.com/RVXPs.png?s=128&g=1",
        "reputation": 726,
        "badge_counts": {
          "gold": 1,
          "silver": 5,
          "bronze": 17,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "angular",
        "model-view-controller",
        "mvvm"
      ],
      "StringTags": null,
      "TopicID": 0
    },
    {
      "title": "WPF MVVM dialog example",
      "body": "<p>Does anyone have any examples of showing a window dialog using MVVM (Prism)? - for example a configuration settings window when a command is executed.</p>\n\n<p>All of the examples I've seen use the mediator pattern which is fine, but they also all have a reference to the view in the view model which is not ideal (we're using DataTemplates)</p>\n\n<p>Thanks</p>\n",
      "up_vote_count": 25,
      "answer_count": 6,
      "view_count": 33948,
      "creation_date": 1257260710,
      "owner": {
        "display_name": "Oll",
        "profile_image": "https://www.gravatar.com/avatar/2efd09d31568bfccabc24cd713bde2d4?s=128&d=identicon&r=PG",
        "reputation": 517,
        "badge_counts": {
          "gold": 1,
          "silver": 11,
          "bronze": 23,
          "UserID": 0,
          "User": null
        },
        "TopicID": 0,
        "UserID": 0,
        "Topic": null
      },
      "tags": [
        "wpf",
        "mvvm",
        "prism",
        "prism-2",
        "mediator"
      ],
      "StringTags": null,
      "TopicID": 0
    }
  ]
}